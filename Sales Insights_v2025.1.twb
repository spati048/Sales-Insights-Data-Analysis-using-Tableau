<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0710.1712                               -->
<workbook original-version='18.1' source-build='2025.2.1 (20252.25.0710.1712)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0pq6utx07uqko817v2jl51vro2ve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0c9pyc31qut2j11awaply0b7yxd4'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='spati048' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='date' table='[date]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[cost_price]' value='[transactions].[cost_price]' />
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[profit_margin]' value='[transactions].[profit_margin]' />
          <map key='[profit_margin_percentage]' value='[transactions].[profit_margin_percentage]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin_percentage]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin_percentage</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>profit_margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[profit_margin]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>profit_margin</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cost_price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cost_price]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>cost_price</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>16</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>17</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_8F348EAE58F94D0CA332F38CB519AB3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_8F348EAE58F94D0CA332F38CB519AB3C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]&quot;' value='Revenue' />
          <alias key='&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]&quot;' value='Profit' />
        </aliases>
      </column>
      <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
      </column>
      <column caption='Profit Margin %' datatype='real' name='[Calculation_1180787580191428609]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([profit_margin])*100/SUM([Calculation_1180787578417401856]))/100' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_5446D4624F074ED5B875B7AE840F0323]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_951B34D41F924B13B9E4834E34AE31CB]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_80B6ABC978864C7E91EA2BAE4229D5F8]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_8F348EAE58F94D0CA332F38CB519AB3C]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_391FA9E29C774570AFEEF250A6FFE0AB]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[pcto:sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
      <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1180787580191428609]' derivation='User' name='[usr:Calculation_1180787580191428609:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Custmer Name)' hidden='true' name='[Action (Custmer Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[custmer_name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Cy Date))' hidden='true' name='[Action (MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[pcto:sum:Calculation_1180787578417401856:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1180787578417401856' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[market_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[market_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_5446D4624F074ED5B875B7AE840F0323'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_951B34D41F924B13B9E4834E34AE31CB'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_80B6ABC978864C7E91EA2BAE4229D5F8'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_8F348EAE58F94D0CA332F38CB519AB3C'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_391FA9E29C774570AFEEF250A6FFE0AB'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_5446D4624F074ED5B875B7AE840F0323' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='date_951B34D41F924B13B9E4834E34AE31CB' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_80B6ABC978864C7E91EA2BAE4229D5F8' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='products_8F348EAE58F94D0CA332F38CB519AB3C' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 10 (generated)' name='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 11 (generated)' name='[Action11_CD2737AF7D55466B8CC9550FDBE1D68E]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 12 (generated)' name='[Action12_2932067A31144E2CBE0670F9FF8881A6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 13 (generated)' name='[Action13_BE9A68549DA641E3BA81F504A435E99D]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Profit Margin by Markets' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 15 (generated)' name='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Customer Table' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 16 (generated)' name='[Action16_EAFB8A05C6634EA28BDD221D08A826D2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 17 (generated)' name='[Action17_549EA11E2D5A4DA7BBB3B5B6A06BF6CC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Profit Analysis' type='sheet' worksheet='Profit' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Profit Analysis' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_91B45E2132144B3E91A0DC88B8CFA725]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_277EC3700108463BA82F86D7D88FF6AC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_CF71C5E2B1E543AFAF4B3A4FF59687CD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_60A0B7A77EA94AE588C69CF8FFEACF79]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_DB3174A6C6EE454C8A8F5A0A7B7EC739]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Sales Qty by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_C3FE5C453C4E4F738A25DD7DEEC6A420]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_8495947AD3B349F796BE6FF232A02AB5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_A4A023A1DE794BE3AE0CF314CA01BD95]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard Revenue' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard Revenue' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1180787580191428609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([profit_margin])*100/SUM([Calculation_1180787578417401856]))/100' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[custmer_name]' derivation='None' name='[none:custmer_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1180787580191428609]' derivation='User' name='[usr:Calculation_1180787580191428609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action11_CD2737AF7D55466B8CC9550FDBE1D68E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' value='163' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' value='p0.00%' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:custmer_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{15C172F4-CCCD-46CD-9A29-07BC7E4456E2}' />
    </worksheet>
    <worksheet name='Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{08479541-101E-4BE2-99B2-41BD7886CEBC}' />
    </worksheet>
    <worksheet name='Pie Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[customer_type]' derivation='None' name='[none:customer_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[pcto:sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]' />
              <wedge-size column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
              <size column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[pcto:sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[pcto:sum:Calculation_1180787578417401856:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontname='Tableau Bold'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.813093900680542' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]</field>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</field>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[pcto:sum:Calculation_1180787578417401856:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brick &amp; Mortar&quot;</value>
                <value>744524588.0</value>
                <value>0.75596366922241198</value>
              </tuple>
            </tuple-reference>
            <label-position x='-112' y='52' />
          </mark-label>
          <mark-label id='1'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]</field>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</field>
                  <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[pcto:sum:Calculation_1180787578417401856:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;E-Commerce&quot;</value>
                <value>240343625.0</value>
                <value>0.24403633077758802</value>
              </tuple>
            </tuple-reference>
            <label-position x='56' y='-63' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4A9F3E3E-BF7C-4675-92A3-0528D608F35C}' />
    </worksheet>
    <worksheet name='Profit'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column-instance column='[profit_margin]' derivation='Sum' name='[sum:profit_margin:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action11_CD2737AF7D55466B8CC9550FDBE1D68E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
            <format attr='width' value='119' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='20'>Profit</run>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='12'>Æ&#10;</run>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='15'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2E850DE-1CCE-4365-9B28-563B55A2858D}' />
    </worksheet>
    <worksheet name='Profit Margin by Markets'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1180787580191428609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([profit_margin])*100/SUM([Calculation_1180787578417401856]))/100' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787580191428609]' derivation='User' name='[usr:Calculation_1180787580191428609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action11_CD2737AF7D55466B8CC9550FDBE1D68E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' value='136' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#ffffff' fontsize='8'>&lt;</run>
                <run fontcolor='#ffffff' fontsize='8'>[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]</run>
                <run fontcolor='#ffffff' fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='0.99950277805328369' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='545' />
                <format attr='maxwidth' value='545' />
                <format attr='minheight' value='588' />
                <format attr='maxheight' value='588' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]</cols>
      </table>
      <simple-id uuid='{130C32A9-E8E5-4E4F-AC30-67BE814AE353}' />
    </worksheet>
    <worksheet name='Profit Trend'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Profit Margin %' datatype='real' name='[Calculation_1180787580191428609]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([profit_margin])*100/SUM([Calculation_1180787578417401856]))/100' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[profit_margin]' role='measure' type='quantitative' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Month-Trunc' name='[tmn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_1180787580191428609]' derivation='User' name='[usr:Calculation_1180787580191428609:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action11_CD2737AF7D55466B8CC9550FDBE1D68E]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action10_85A73E0C9FBE4853BC3DDEAA8095C3DB]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' value='p0.00%' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk] + [federated.0pq6utx07uqko817v2jl51vro2ve].[usr:Calculation_1180787580191428609:qk])</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[tmn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{D4461806-7120-471E-A960-B8B01702FC7F}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='16'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05A21EC3-B713-4C5F-AEF0-E7037C182C07}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Total Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='20'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='15'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CE6B7BD4-1994-4BD2-8175-F4745D09EF1C}' />
    </worksheet>
    <worksheet name='Revenue By Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]' value='8' />
            <format attr='color' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</rows>
        <cols>([federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok] / [federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{B70DF143-4D82-4EB6-B480-B197B7892472}' />
    </worksheet>
    <worksheet name='Revenue by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='member' level='[yr:cy_date:ok]' member='2020' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
            <format attr='font-family' data-class='subtotal' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold'>&lt;</run>
                <run bold='true' fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run bold='true' fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{1B839907-A669-40E4-B680-DC1516329BFF}' />
    </worksheet>
    <worksheet name='Sales Qty by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;</run>
                <run fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{DACCFF2F-ABDA-4B9A-8812-67A11E9C426D}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_code]' derivation='None' name='[none:customer_code:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1180787578417401856])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:customer_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;</run>
                <run fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{E8E1B5C0-21C3-4EF0-9C13-3E750413E179}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1180787578417401856])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod001&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod007&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod008&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod011&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod012&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod014&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod015&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod020&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod022&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod024&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod025&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod026&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod028&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod029&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod031&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod032&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod034&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod036&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod037&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod041&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod043&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod050&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod051&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod063&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod067&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod068&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod069&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod076&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod077&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod078&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod080&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod081&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod082&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod085&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod086&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod087&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod088&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod097&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod107&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod109&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod111&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod112&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod125&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod132&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod138&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod150&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod151&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod153&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod155&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod160&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod163&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod171&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod173&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod180&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod182&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod183&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod186&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod189&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod190&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod193&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod195&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod196&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod197&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod199&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod200&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod201&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod202&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod203&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod211&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod217&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod222&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod226&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod235&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod251&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod253&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod256&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod259&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod262&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod268&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod272&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod277&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod279&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod280&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod281&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod282&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod283&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod284&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod285&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod286&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod287&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod288&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod289&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod290&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod291&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod292&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod293&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod294&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod295&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod296&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod297&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod298&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod300&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod301&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod302&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod303&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod304&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod305&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod306&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod307&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod308&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod309&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod310&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod311&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod312&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod313&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod314&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod315&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod316&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod317&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod318&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod319&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod320&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod321&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod322&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod323&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod324&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod325&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod326&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod327&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod328&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod329&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod330&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod331&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod332&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod333&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod334&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod335&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod336&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod337&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod338&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod339&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{E2FE4F8C-B040-49E1-9FE9-46B1DCBDA9E7}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]'>
            <groupfilter function='level-members' level='[custmer_name]' user:ui-action-filter='[Action15_978C9103D2B0400F8E1FA25F52E6FA4A]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (Custmer Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{8B0D0F2F-A091-4F67-91E4-BD84B9D2F04A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard Profit Analysis'>
      <style />
      <size maxheight='900' maxwidth='1900' minheight='900' minwidth='1900' sizing-mode='fixed' />
      <zones>
        <zone h='4444' id='4' name='Year' show-title='false' w='16000' x='17563' y='1444' />
        <zone h='6778' id='5' name='Months' show-title='false' w='48563' x='875' y='5778' />
        <zone h='83111' id='6' name='Revenue by Market' w='22579' x='579' y='12222' />
        <zone h='13556' id='7' name='Revenue' show-title='false' w='18250' x='46563' y='1222' />
        <zone h='82444' id='8' name='Profit Margin by Markets' w='23158' x='22947' y='12222' />
        <zone h='33556' id='9' name='Profit Trend' show-title='false' w='50000' x='47158' y='12667' />
        <zone h='45222' id='10' name='Customer Table' show-title='false' w='34158' x='47000' y='48667' />
        <zone h='12556' id='11' name='Profit' show-title='false' w='8500' x='64250' y='1222' />
        <zone h='45111' id='12' name='Pie Chart' show-title='false' w='19105' x='81579' y='48889' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='13' param='vert' type-v2='layout-flow' w='99158' x='421' y='889'>
                <zone fixed-size='122' h='13556' id='7' is-fixed='true' name='Revenue' show-title='false' w='18250' x='46563' y='1222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='12556' id='11' is-fixed='true' name='Profit' show-title='false' w='8500' x='64250' y='1222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='40' h='4444' id='4' is-fixed='true' name='Year' show-title='false' w='16000' x='17563' y='1444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='61' h='6778' id='5' is-fixed='true' name='Months' show-title='false' w='48563' x='875' y='5778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='83111' id='6' is-fixed='true' name='Revenue by Market' w='22579' x='579' y='12222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='82444' id='8' is-fixed='true' name='Profit Margin by Markets' w='23158' x='22947' y='12222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='33556' id='9' is-fixed='true' name='Profit Trend' show-title='false' w='50000' x='47158' y='12667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45222' id='10' is-fixed='true' name='Customer Table' show-title='false' w='34158' x='47000' y='48667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45111' id='12' is-fixed='true' name='Pie Chart' show-title='false' w='19105' x='81579' y='48889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{08D21EDD-8FC5-4D44-8913-A77D58EF1A3D}' />
    </dashboard>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard Revenue'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='6' type-v2='empty' w='99000' x='500' y='889' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3111' id='7' name='Year' show-title='false' w='28438' x='37938' y='1778' />
        <zone h='6222' id='8' name='Months' show-title='false' w='50188' x='23375' y='6000' />
        <zone h='10667' id='9' name='Revenue' show-title='false' w='18500' x='3500' y='11111' />
        <zone h='11000' id='10' name='Quantity' show-title='false' w='20000' x='25063' y='11667' />
        <zone h='72667' id='11' name='Revenue by Market' w='22188' x='1750' y='22333' />
        <zone h='73556' id='12' name='Sales Qty by Market' w='22875' x='24188' y='22222' />
        <zone h='38444' id='13' name='Revenue By Year' w='45625' x='50625' y='13111' />
        <zone h='11111' id='14' name='Revenue By Year' pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type-v2='color' w='12625' x='80438' y='5000' />
        <zone h='41444' id='15' name='Top 5 Customers' w='20688' x='48063' y='53444' />
        <zone h='36778' id='16' name='Top 5 Products' w='23625' x='70563' y='54333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='20' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='19' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='28' h='3111' id='7' is-fixed='true' name='Year' show-title='false' w='28438' x='37938' y='1778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='6222' id='8' is-fixed='true' name='Months' show-title='false' w='50188' x='23375' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='96' h='10667' id='9' is-fixed='true' name='Revenue' show-title='false' w='18500' x='3500' y='11111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='11000' id='10' is-fixed='true' name='Quantity' show-title='false' w='20000' x='25063' y='11667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38444' id='13' is-fixed='true' name='Revenue By Year' w='45625' x='50625' y='13111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11111' id='14' name='Revenue By Year' pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type-v2='color' w='12625' x='80438' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73556' id='12' is-fixed='true' name='Sales Qty by Market' w='22875' x='24188' y='22222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72667' id='11' is-fixed='true' name='Revenue by Market' w='22188' x='1750' y='22333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41444' id='15' is-fixed='true' name='Top 5 Customers' w='20688' x='48063' y='53444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36778' id='16' is-fixed='true' name='Top 5 Products' w='23625' x='70563' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F81EC26-B8E8-4482-BC7C-4D3F33617DD6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' show-side-pane='false' source-height='44'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{929A6FED-67E5-4F49-8044-184BFB288EF9}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4AD623FE-7913-4850-AB63-EB3FAB68AE8A}' />
    </window>
    <window class='worksheet' name='Revenue by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{931C9D93-E317-4510-B21B-974E8A81CEC9}' />
    </window>
    <window class='worksheet' name='Profit Margin by Markets'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB435CC8-E984-4039-8EB4-B8D558FA69F5}' />
    </window>
    <window class='worksheet' name='Sales Qty by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C585C6D2-7B4B-46C3-B486-7A8FBE2FA789}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10C64DF0-4AEF-4E45-AA52-71CA43DE9AC7}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECDB8F52-A124-421C-911B-F6FF61F84A05}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D7AAB3B-F257-4B84-A0A7-8810F4B41481}' />
    </window>
    <window class='worksheet' name='Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15819361-4018-45B7-A9EF-BFC8EE8B8F82}' />
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F345DAA-4D4E-466A-A396-6BEC8E068417}' />
    </window>
    <window class='dashboard' name='Dashboard Revenue'>
      <viewpoints>
        <viewpoint name='Months' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Sales Qty by Market' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{E33F36FA-8C77-46B0-AB88-2F18D2CB4289}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard Profit Analysis'>
      <viewpoints>
        <viewpoint name='Customer Table' />
        <viewpoint name='Months' />
        <viewpoint name='Pie Chart'>
          <zoom type='entire-view' />
          <highlight field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Profit'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:profit_margin:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2060160.3399999968</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Profit Margin by Markets' />
        <viewpoint name='Profit Trend'>
          <zoom type='entire-view' />
          <highlight field='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Revenue'>
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields />
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>142224545.0</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Year'>
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <fields>
                    <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>2020</bucket>
                  </multibucket>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{ADEF0AF2-5C96-458C-9807-0CE7C7591264}' />
    </window>
    <window class='worksheet' name='Profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D459C509-E5B4-469E-9682-4F5A5366B258}' />
    </window>
    <window class='worksheet' name='Profit Trend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{30F07676-67DC-4B04-88B6-D98DA7EC1B41}' />
    </window>
    <window class='worksheet' name='Customer Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:custmer_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFE953DC-7E47-45C9-A6AE-F38E4BDF4F6F}' />
    </window>
    <window class='worksheet' name='Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_type:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E121E426-2E1F-400A-A9FC-336CFCB59F88}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer Table' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard Profit Analysis' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='49' name='Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pie Chart' width='192'>
      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
      tgT+z2nzfQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='99' name='Profit' width='124'>
      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
    </thumbnail>
    <thumbnail height='192' name='Profit Margin by Markets' width='192'>
      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
      BWBzofn/O3ZgBZyON2QAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Profit Trend' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='92' name='Quantity' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='99' name='Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Market' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2daZwcV3mvn6re957p2fdNy2hGkiVZxsY2NmG1gUQ4hEAMCRDITS7ZuElu
      Em5ywUDyI7lJSEhCSEIgQAgEh9WAF+Tdsi1ZGo1m3/eepbun971ruR9aHlmWLGmk0bTkOc+X
      qemqrn9Vd/37LO97zpF0XdcRCLYocqkvQCAoJcIAgi2NMIBgSyMMINjSCAMItjTCAIItTUkM
      UKqeV13XS6pdKsQ9vzIlMYCmaaWQRdO0kn0pqqqWRLeU2tfDPRuv8nWcl8d6pnlmYGHzhV98
      +CWpBNI6Ugl0S6l9PdxzSQywtJqkd3y5FNICwVmswwA6qqqBriMbjZTG1wLBuRiNRup8DjRF
      YWE1hdVqQVYLpBWdpmoP0WiCeLZYJfK67bhtJmLxNDaH7VwDFGJLHBny4zCotO+6gTKHGUVV
      MRplJsYnkHI56rq7sEsyidUVTGXV2I06jz/0MPvveCPRpWlqGtsY6T+JZLTRuq2OniPDuL0m
      6tq7qS6zb/oHJHh109TawHv3V3JqYgXN6uBj99zId77/JHJdC50eqPY5+KtvHiMP3Pu2AwT8
      IQYn/LRtbz7XALqmUN+ynW01dnr7RliRFXTAU9taLAFyacZHR9HyGo1uB4aK4vuqamqYGh/H
      ZdFJrS5irWhlR1MFuh7DV91AfZVOIJIQBhBsOA6LAc1got5n5+HeBQ4PFKvXJqMBo6Rid3so
      t8FyRkZVVBprvczMLfKjJwZeuRdI0xSQNJYWA2hAOpUGQDZa2LFrFzaTRD6bRX2xXWmyUumQ
      CMYzSLKM/pKensWZMZ47NU17S9XV+xQEW5bV4Cpffbif+uYa7EYDdosBp93Cqf5J+vxJ1HwW
      yeaipcrOE8+PcHggwMHtVVTWVp1bAkhGC4H5CRJLEtt2dWM3QkGX8XqcpPU8ktmEDDgcDixI
      GCUACYfDQX1jLVMLR3CW17Kw2Et/X4DmbQ3s2H0DPrfG9NwS21rqNv0DEry60TBw++46Hnxi
      AKfPA6kELl8Z7mSMtlo39z9yirzBiNekUl5RRq3LyHeencJZXo50sfEAL+5ed3eWrqO/wvu+
      9lAv33lqZH3nEwiuAhftBbrsflxJEj1Fgmuei5YAV4OFQJRgLLvZssV2iSSVJDijqSqywbDp
      uqXUvh7uuSQGUFUVQwk+GFVVkSQJWd78DBBFUTAaSxJ3LJn29XDPIhtUsKUpiT2/8+QQDzw3
      sfnCOpSsYVJC7S/+r7tK9kt8rVOSTyWbV4mncqWQ3pKIeT9emYtWgXRdI5MpNlg1VSGby1/w
      eE3Jk8kVzj2PplJQSpce+0pIksT21irsMvh8Hu7Y28ze5jIsVit37m+l3mtZO7atqZrbu2ox
      SNDaWMXruuswG2X2dzZQ4zbjdDu5ZWcNpWn2CS6HSzBAggd/9ASKpjM/OcrzPb3FvHp0NE1D
      0zSSiTiKohBPJFGSAUZmlkhlir/w2UyafEFBK2RIZC5snlKwZ1cLH73nRrxGuHFPGxUWnXRO
      4efeuBeLpvGhu/YgAUa7k1++o5XK+nresKeRe29rxear5A2d1bz9ti7etLeW/d0t/MKtHZhE
      y+q64ZK+qlqfm5VwgmQe3FYj48Oj6Gj0neqn5+izLAVWePLpI4z1nSCag9VQiJFTx4mmMszP
      zfLskefI5VOsRjJX+37WzanBafr8SQCi0SSNrY285YYGGlxGnh5YQDGYkSXweF0El0IcG1+h
      3msmY7Ryc1sZc6spMtEwJlcZDXaYjislviPBergkA3ir6wjOjmC0eZE4M7RQ13VMVgetra3U
      1tZQW+Eir0B1XQP1FW5CqyHSiozDYkDR9GuyLlpXXUa1y8KOZh8oBY4NL1HpczITzfOWA60Y
      lBzbtzXiJUtlfTV3dNWxlFBwk+fETIzOxjJAJ1QwYlWuPYMLLszFI8GY8VWUkY6mqWquI7Ki
      Y9AKDA+NYHN7cdtMSMj4ysuw4gCLi5WpaVZtTjpqXQxHwpjtbswWB2Xua692rGk6P36sj0JB
      IxBapaXKyd997yTxgsT+jiqeemAWLDaUdIp/fmiYOodMz1SIweUktS4jJ8cD1E1HiGZVTFoB
      mz1EvjQjPgWXQUkCYSIXaHP5xp8cwmm3brquCIQJBNc4JSkB0pkchRJUEzStmAohSZvve1VV
      MBhK82toNxswmUQqxPkoydVZzEbsWy4XyFDSh0FwfkryjaSzBXLK5keCNU07XQJsfk7CRicA
      lrtsyLJIOL9SSmKA7z09IhrBV8hXP34Ir3PzG7avNkQjWLClOcsAqdgqkUQGdJXQauTSz6Jr
      RKLRl75AKLS6QZe4cZSXeXjLvgaQDLzjjm4+8OZufHYTt+zr4INv3U2d2wxAVZWPD9y9j7v2
      1SMBezqb2VXrxO318P4378ImwU1727lte0Vpb0hwxZxlgOmZOeZmp0ErMDYyyuTUNHlFI7iy
      yOTUDIv+OZZDUZRchunpaVLZAvlMktnZOabnF4lHQszMzpFXVMZHBpmeniWvXDtRoYN7Wrh9
      Zw2gMzi+QFA1s6/ZSyIapW8lz527irNWZDIZnjw5w97uVuory/iZG5pp8VlxupzcuLORHTUO
      DnQ2sKelvLQ3JLhi1gygKxlymhEtl6ag6ejIuEwai4EIY5PTGLMhMgYPCzNTjAwP43Q5GR4e
      YXhohLLyMgxysXGZSwQYGvcjG0z43CZGJuZKeX9n8fDRcXKqDrqGp6yMXdV2grEMJqeHO9sc
      PNi7BEA6U+A1N7SSTyYJrkZ4ejS4do7hqQA33NBOPBThGszsEKyTNQME/fNgMGDUCyyEktgd
      LpwOB6BjsztwOmw4nB4MskQmlWA1HMXn86HLBpwOG+gwNj5BRXUVFBTMFhsWixlZkshkMmhK
      nlyhhN1xksRbb95ObXU5t+9poqvWQTyv0VhTxi+/YQehRIFtDV7uffNeXtPVgJrO4HK7aKgp
      5/bOavZ3teKzy6SiURqb6xidvfaqeIL1sxYIi0XCOD1lGCSFcCQFkoTbbiarSuRzGRxmCc3i
      JRMP47AamZiex1ddj5Us/mCUqupa1HSEeE6horyaRHiJtCLR0dFONLyK12klqZgoc1lLlgrh
      sBUzOwuKitVqwYTGaiKLzVp8PV9QkGUZVYNyl5VEMkNG1XFYjKBDJq8gSyDLMvmCiskokStF
      RI/19QKJMcGvzNoRnrIX67Mmysu9awc4AV6SR2IrLx7X1dW19pq3oqa4Ue7h9BblZa61/ZWV
      lQCUreMGrgapl4xHyObT530dig/0cji59koi/fJxDMVjcgVRCbreKYk97VYTFZ7NnyNURz89
      LPf6nytfLtG8+682xLQom8T1UB14teiuR1sEwgRbmpLYcyEYZyWSvviBG8wr5QLtbqvCZjFt
      +vUISk9JDPBk7+w1lQv0jx+7m4ZKYYCtiKgCCbY06yoBkpEgM/4ABouN9sZqQvEsdVW+S3qv
      mouzmjJQVe64hKNl3veOGykz6Tz8zBD7D+yg0irz/cf6mI/lsTkdfODN3aQjYe4/usDP3rGL
      gZ4hErZy7j1Yw19/t4d77rqJ4NQUh4eCF5cTbFnWVQLEozHqWjswpSOsJlKMDA3S2zdAXlGZ
      GBlkeGyKfCbO0NAwg6MTqEqe0eFBxqfnUAtpoolLGwMgm4zsrHHRP7bIXFyj2WNkPq7SVF6M
      R9y8bxuGbJIxfxSbzYzTZsFlMeBw2PGWu+ioclPntVHptlxESbDVWV8VSCswPjLEciKL3Sjj
      q66j2mthaXYM1dlAlTXP5OwCsqsaD1kiOQ2z2Yx/epLcOiaF0xWFrzzYS0VjPXfvrUHTJawm
      aa3r1GYxsbAS5dZbdiEn4syGz0xHMjQd4nWv2caiP7SuWxNsTdZnAMlAVU0tFQ4D0XQBg9GA
      LMkYrQ7S8VXC8TQ2s5FUMk4oniEXXiSlmbFbzetKHDOZrbz1lg46ys1MLMXAaKLOayOpGPit
      n9vLsb5pduxoRk4nKa+r4cZmL7cdaMcsqcwvBCkrc9A/GyaVv/amYhRcW6wrEFbIZQiFo5it
      dso8TvKKWlwjTDYSjwRRJQt2NUzfYp6dbQ14nVZWVgJY7S5cThuKJmExGS4pF0iSivFaTS/O
      32mQQNHOXKosy6BraBsQxiv2Armv/EQX4HoICr1adNejva6rM1ls1Nba1v63ms9Ec8srqgHQ
      FBv7y4xYTMV9NbVnFsVbT/BX11krNXRdR3nZg65p1844A8H1y4bbUzZauFjTs6HSxU2d9Rst
      fVFeacE/m1nMnb9VEblAm8T1UB14teiuR1sEwgRbmpLYs39qhZG58KbranoxHVqSJKxmI4du
      37np1yC4tiiJAfomAyXPBfI6rcIAAlEFEmxtLrkEmJkYxOiqo8otE03JVFW4Lv6my0G28KmP
      3EYknOL+R0/x4XteSywW51s/PslSWmHv7g7esa+W0NIKp8JwsLUcNRGlN2bk53c6+L2v9fDp
      j76ZRx86wuPj0YvrCbY0l2yAZB7UpVnKbHUkUzK5xAqrkTgdXXtYGB8kmy/Q0L6ThckRNA06
      uvaSigapcBoJ5S1E/HPITi872xovqGNz2/GaZAZXVsljxWOTGR6NEj0d1b2ps5YvffsZ3vuu
      25g6dpKmchumTB6T0UJMldjd4iMRjmMyiCGDgotzyVUgCYm2+gqmFgKAjqIomPUk45Mz6I5K
      Gis9JFNZdLOd7s42lpdWiEQiqJk44USKYDzPjtaGi+oUkgn+75efRHVV0F0lc9+/PYHmqeBg
      i4cyp4WComG1mDDJOrqq0DseoL2pmJHaNx3mnbe2Mjy3jlntBFuaSzeAJOGqrCcXXkKTdJaW
      V5AkGbPDQzIwx/j0HDoQWvLTPziGt7yceDjI6OQssiTh8XguaVC41W7n3W/aQ7Uhy1hY5Rff
      tJdKKcNQUOXN++o5fGyCQ2/Zz8CpSXbvaeNN+xvpn1ghtBpjeGKZ+VCCEX+EQOLcpVoFgpdz
      2YEwTVMBGVlXmJyZJRGJ0LRtJwt+P907tyPLcvEYST5nBoNrYYkkr9PKVz9+aNP0roeg0KtF
      dz3al311svxiJNdEc1MTelMLRqMBj3PbWqT1zDECwbXJhtjTaDKvbV9KisPutqqSLNmjaxqc
      HhRvFfk/AkQu0KZxPVQHXi2669EWgTDBlqZk06I8N+S/pGPb6sp47xu6r/IVCbYqJZsY69jw
      pRmgoIhhjYKrx1WtAmmaivYKYxbVXAqloKDrKunIMvlc7qx9yUhgbQBLMBBER2dlcZ5IPIVa
      yDIzM8s1tPiM4DrligwwOT6JWsjQNziCruuoqlocyqjraJpGZHEGfySFpumomTiBaAqAdGCE
      5/7zz1gNrhIcPMxk79MM/PTrqBqAwuAjX8J/6kEmB07xxPf/mZ/75Y+ioPGJ/3kv9/3dfzD8
      zA+5622HWE5e8PIEgotyRVWgZDxMT0+Izr0HmB4bJF3QMTvKkHNRcqqEyywxtTDKArB/Twu5
      bPF9tooOGnd0owNWp4f89Ayy2U0xXmbAbDGRTsSpbPbwujf8KiMP/yMA1vImtOgczw8ked2B
      7Vd04wIBXGEJIBuMmAwSBVUhkVHp7uomm1glkVXo6urCbjHS2rGDSpcNRSuQyRWXSNJ1DVUp
      oOYyhBfGqel+A3pmmVR4kVRshURcpW3PTazOj1HIZckX8qTSWUBmR5WJ4/48FXYxl6fgyrmi
      EsDl9tLUXM/gyCQep5m+/j7s7krkXIT+gQF8HhcWkwGDzYYsm7BZinLp4DgF2UnBP0RD9+tZ
      6DtC5c6fQVKS5FQPzbv3sjgzT9sNP0PfkQe5ad9NPPzkcd566B52bm+iZVnDntqBmPhNcKVs
      XCBM19F0/fR8PXpxShNJOu9aLOvJBdq3rYZPfvDODblEEQjbGrrr0d64q5OkM0lvr/DgCwTX
      GiWx5x03NLOjqfKSjvU4RT1HcPUoiQEaKt0015R6zUiBQOQCCbY4JSkBvv/0CD85OnlJx37m
      w6+n1neVBuALtjwlMUAqWyAUu7RF8hRV5DsIrh6XVAXSNY10OoWiamQymYu/4RXOceZh1kmv
      zpNNZ9GULCtjx4iHV9dmg85G/fhHTqCoKqDz9OGfsBCKc+KZxxmZXiSXCPHgQw+TEcN+BVfI
      RQ2g6zoDp3rwLy4RTaQYHhkikUwWpyzPZ0llcsU8IKVAMpU5s53OoAO5bIaCoqLlU0RTxVyI
      1PIwPQ98kWg0xvKpnxBPFZh4+lsUn/ccg4e/iZqaZ+zE80yfeIhP3PdpnhmY5Uuf+zR//6/f
      pveJH/Hx//MJVi/PiwLBGhevAul5FMnKto4OAPqCKywbNVRPE8ngIlaDRk19FT39fsosKh07
      Wzg+tIhTVth74z78szMsByIcuKGdaMxMhduOo6aTxh1dADgr6lk4cRSDzYcs65BPoFlraOy8
      ieOPP8HnvxTivYfuJJ3OYPE0IOUDHJ0ocPue1qv6wQi2BhevAklGNO1MXaOssoZtrY2kEzEi
      0RgaBnRNo6a+iYYqLwVVp6ahmdqKcpLxMOmChFnWUTR9LTU6nwiQjISIL00Tmh+jYtvNaKkl
      Yv4RwtEMcnaF+eFj2Lzl7OjawdFjvYwMjwKwp8nOqUUVt1UMuBdcORctASRk6is9nOrrp7q+
      iYqKSjDZqal14CBHQTdgs7vwYcAuScg2Kz6DEYuiY7aY0JQgZrsLs9mO11V8aHVNxbftVsCE
      r/udhKb62XbH+7FZdBTJTtcb38Pq8jI7b9jHr//m27DkAhRs1UQWuqmrq+BgDIyZID771f54
      BK92SjIofj25QP/wu3fRWOXZEF2RC7Q1dNejLQJhgi1NSUqAeCpLvnBp/ftelxWjYWN8KkqA
      raG7Hu2SXJ3DasLtEI1YQekpiQGml6IshBKvuL+mzMnO5opNvCLBVqUkBnh2YP6CjeDX72sR
      BhBsCqIRLNjSrKME0AkEQlT4vPiXQzTW1162qJIOMfjQP1Oz/13IyXHmRvsxOuvpvO1uZAm+
      85W/pu+RMu55368xe+R7nJxc4hc+8nsc/Y/P4r35vfzCAS8f+v2/4Kvf/gFVjsu+DIFgfQYI
      BYNEluepau9mYWaCcDzL9l07mB0dJZ0r0L6zk8XpcXKKzvZdXaTjETw2A9GCiXQ4SBYj21sb
      URUF2SBRUBSqGndTnVMILPjXdBZmJvn5d/42B7taeOQbIW49sJPJqVnCqRwrJ4/xXLYMl1Um
      LyaNE1wh66oCRYNLLMULeO0mJElGzoaYXI6SzMCO5gqC4RhpTWZHay3z/hVWVlZQkqusROKM
      TS/R3lxcIsnirsHufDHHXwJJQi2k0VQNXdd57//437RbVvnE575CtqBgMpuIxGIgWamxFzi+
      lKWtQoSBBVfOuhrB3so6aiscDE/NkgisUOt1ED89E4QESEAqHmV2voCjqo3lwAwLBR08rfgq
      KjHIxaHycX8vQf88cvhR8g0eYisBZIuT2PQRMgYfiZODzPtMvPODv0vPj6d45vk+bj90EONS
      A699TTePjCnUNUQwiZ5UwRWyjkCYTqGgYDIayeULFPIZdGSsNju6pmEySiiFPCdODdK5sxO3
      20kqHkNDwmZ3oOs65tOLYrw0FULXdXRNRZINa2uI3XlDM7/zrtcgy3Ix7VpVMW1AQEUEwraG
      7nq013F1EiZTcTY2i8WMxWJ+yb7iT7HRLLNv7961fU73xXN4JElCMhjPee3Fh1SSpA15+AWC
      87GhT5YkyS8zxvlprfVyxw3Nr7h/Z5OIAQg2B7FE0iZxPVQHXi2669EWgTDBlqYk9uwZW6J/
      Orj2f2OVhzfd2FaKSxFscUpigOHZED94ZnTt/xt31gkDCErC+g1weuZnSbrQ9Lc6un6BY3QN
      TVVPx8DktfMqqopsMCBDcVs2nO4ilZGk4hxBRoPhItoCwaVznjaAwtzcIgCTE+eZvU1XmJqe
      v8hpdUZGRl9xb3DkKCd+8Lc89pU/58UlxMLzfdx+4AA/OTpNfGWcN968l28/PcgHDt3GZ/7x
      2ww/eT87Dr6eSEbkPwg2jvOUABrRcITKyjIikShTU1O0trYyOzuHUc8TSabJqhbM0+PEEil8
      da1EFydRTB6qPCaCwVV8je2s+OfIZ9NUN2+jpvzsqQ0rO2+h86ZJZuZixSnVdZ1//7f/5O2H
      7kJVNb7+b1/h7nf+LIqmYazcTnaxnyOKk9v2t7H5fVaCVzPnrQLFo6ssLlpJZfN0WDTGpmbQ
      MFJIZtmzu5PB0TmmpqbwVdexvDxPKpbl1tv3Mz89jsEMywsBPL4q9uzezqlh/zkGAI2ZU8/R
      cseHUTIxsqs5TpwcQc9GiBgqmT81ipYNU603AjL1XpnBsE6lVVR9BBvLeQwgUVXbQHt7G+lU
      Gk9dGy88+GNuecNdzAwtMzQyRkGzUFVZgSbL1FZVE9SLC2KEQiFsThtGo4FENEp//zC++nbm
      5+ep9jqIKBaqyxxo2QiOhhtxOG3EZgZI1t3Md7//PY499gCmptew708+Rt+Rn5Dy7WHoiIlb
      dzfiDdiQIpVYjMIEgo3jooGwRCTIzFKE3bu2F5c/1XUMp5dBUrXTiXCnn0ld19B1CVmWijk+
      Ly6Z9DJePi3KjTvr+NNfft3G3tl5EIGwraG7Hu2LHuHw+OjyFlMTJEnC8JJlkAyGs3+NJemM
      GSRJEr01gmueixrgavxa7t9ei8dpXfu/uty54RoCwaUgcoE2ieuhOvBq0V2PtsgFEmxpSmLP
      wyemeLqvGEy770N3FhvVAkEJKIkBVsIp+qcCxX9EYEtQQkr201vIxEjFwmde0DUmRoaIpXL4
      ZyY40dtPQdWYmRghGEmgZBP0D42iaMIxgo3jskuAE88fwWx3YrB66OxoQtV0DAaZmZlpmlta
      kaA4/YnRiISOqmovaZSoTDz1DRKqG/h1AGZ6H+f9H/lj/vjzXyPS91PmpoZ4vPtuTt7/WZpf
      +wEO7ZZ5331f5/knDlPuEEMkBRvDZT9JNlcZnZ3bOd7Tx8qixOrqKs6KOgYGBpBMdmLLs5js
      djTJQZXHxGokjM3bQEu9j8R8D+aqPZiCs0AxgPbl/3yAe999F7puoq2pgm/eP8Yf3fv7DD6+
      DTkxzXNDTu480CJqTIIN5bKrQPHVFfoHRujs7iYSiSJTIJLRaWhooKWhBl02s3NXJ7KWJxKN
      ousSsdNVnlQG0sExogvDHDvRy8jIAKuJHI/89DGOPPVTHA17+KOPvpvv/ugRAForTYzHZFxi
      GhTBBnPZJUBdUztNLU2AjqoqSLIRp82MljcyPb+Ey+1GQsLpdJCMBdFlEw5HcTKrmu0H6X6D
      meDCND5jlrS5lX/84j8xduooBm8Dj/3oflZTGh/71Q8w3tdGV2s122IWiO/DbhY9RoKNY0MC
      YS+eQpKks7bPtx/OzgX67qffjWGDFsC4GCIQtjV016O9IVf30of9fPk/IidIcK1SEnu+8UAr
      +7YXZ5eWZWEOQekoiQGqy53UVW7Myo8CwZUgWpSCLU1JDHD/44P80qe+w3wgVgp5gWCNkhgg
      r2iksgU0kdYgKDEXNEChULhg5DWVSl1WZDYfX2a29zH6R6eLszzoOuN9z/Plr32LeLbAwLEn
      +PJ/fJtUrsATD36fgUk/6bCfb37nh+SUS1tfWCC4FC5ogOnxCVRYGwusa8UVXAr5LLl8gbHR
      MdB1NE1DVRWisXhxfy5DPJE+PUZYR9PU03+LD28hX8BdWcen7vsMmq6jaSk+/qefxZGd4y//
      /l+576+/hiszyee+9kO+9KV/4D++/l8c/en3+MvP/xPJnDCAYOO4YC/QiwEsJRlkKiphSQUw
      l5UzP79CfV0t6DrT40M4KhroP/4cTXUVhL2NrPgXqHRKhJwVZPMSkflB2vfeTHBpmd3dO7E5
      7cwc/wlvfNu7kCTQUisYvR28/e1v4aFPf4tyQ5xnTowQ9RgwuRuwFkI8P+nktu7qTflQBFuH
      dbUBdF0nl45RUddKfW0V2VQUfzBBuctOeXUdTY31qKkYjvJaWppqSRfMKKkVfLXNzA2fxFXV
      CEA0kqC26w56nn6UE08/xHPTBYiP8a9f/gbbbryVQ+86hNdu4uabbgRge52V+ZSZi688IBCs
      jwuWAC6nlZGBQerq68iH50gpOjvatjE3McpUwUdz+04qypwEVmPUVFVisDgor/ESWZpkYFKn
      s7ub4EwYV8MO0DQaK4trmtodDtAl/v4Lf09rlZmcpZy//fzf0Dvq5/Wvfx1Dx5/ijp//de58
      7X5e31VHXaWHWzJGtMwqbqvIiBNsHCUZFP9iLtDnf/utNNd4N01X5AJtDd31aItAmGBLU5IS
      IJPLo+lgM5s2NRdIlABbQ3c92iW5OrPRUJJ5gQSCl1OSKlAykycYTZVCWiA4i5IY4AfPjPKH
      XzxcCmmB4CxEI1iwpblsA+i6TnBpnrHJGdSLJrWdSYMAyEXnOP7gV/jiNx4oRpt1nVPPPMTv
      /s7vcmx4juDCBF/4l6+j6ipf+bs/56fPDxCZG+CP7vsLUnmRCiHYOC7bAIVUmIXVLA2VZeSV
      AplMlkI2Ta5QIB6NshQIEVhaYHrOTy4d4/Dhx1iNxAHQNNj+mrfywP1fRdVB0/J85rOf4y3v
      +Dmaqrw89vCP+e6PHkHTNZ44epSf/vAHPHP4EY6eOEa2IAwg2Dgu2wAmuweTmmB4cgZdyzE7
      t0RkaZJgJMJTz57E6XQhyzKRuSGW0gZcLhcOu634Xpud/ke/xYc++gcYJNC1BMFgmomex/h/
      //Rf/OL7PkiZo5j4IFvK8JrSHF/Msrfx5UstCQRXxmV3g2qaStv2LjKrcywGE+iaRi6XQ3JA
      fWMLLrvOcN8ydT4POd2AxWLBajEBsNT3JNmCxLFnnsKbGCJRdZBbDjQzObdM1e79fPVfPsdg
      fw/3P/AkAF3NLn4668CyMfcsEKxx2YEwTS0wOT6OZrTR0dbM7MQommyirqGBXMLnaekAAAsK
      SURBVE6lzGNnZmIUXTZRWd9CIjCHbnZTV+3j33/8AoePT/CFj70Dq8UIshFZVwlFolRWVpFN
      J1E1HaPJgoSG2WigoEmgKVis1sueZUIEwraG7nq0L/vqZIOJbTt3rf3ftr1zbdt+evGXlo6d
      a685G1vPeq/ZYsftfunKMEZqqovpzg7nuVWdYtjMdLmXKxCcl5J0gzptZiq9jlJICwRnIZZI
      2iSuh+rAq0V3PdoiECbY0pTEANFkthSyAsE5lMQAU4uRUsgKBOdQsiqQruuvPKXK6VXmBYKr
      zTkGmJkYYWBgAH9gleDiLJnCuW/yL8xd0VpdS1On+OD738cn/vpLRSPoGl/47Mf58Ed+jWf6
      JvnbT/0hH/zVD3Nqaon/+1vv5yvffxJ//5O87T0fIp5VL1tXIHg55zSTU3mVzp07ONHbR7lF
      YTaQwO3xUuWx4yovJxwMEg74WQ3H8FbWUGaFOf8KFbVNqOlVwpE43upG7FKWxWCEptYO3Paz
      Y7gnnnuBD/7J3/CNT/42gfwHqTKpDEwscMf+XZzsOcpTI0k+9Rt384Wv/zeZhEL++UexLjox
      yTkKqigZBBvHOSVAKhpiYKAfk9UFkpH2HbvIp6MEl5ZRgYX5BSSDhR27uggvLyDJMgajgcmJ
      SZZWQnTt3kM05GdgYBBZzzM4NHmOqK5JWC0WTDIoGuh6Aa0AubxCTvLw7td38E9f/W9UTQPJ
      QoVDpy+o0FYmAmGCjeUcA5htDmpr68gm42t95pIkYZA0gsEg8WQadJVwKIgqGZmensFb5sUg
      S8gGA5IkIUkybo+H8opatnc0EgqFKGQSa70/3ft28Dd/9BtoTfsY++GXuP+pYexmjRf6xqit
      qmBxcZ5oVuZXf+keqqqquam7CUtZCxWV1RjEegKCDeScQFgiHiGTLeDylGGUVGSTFaWQwyhB
      MBzF4XRhlnWi8STech8oOaKJDB6PGwkNi8VKLp9DRiccieEp86EpBaxmA3lNxmo28sLwAjd0
      VGMwGpFP5/XoukahoGI2m9BUBVWXMBk3NlgmAmFbQ3c92iWJBL8wvMDBzobNlhUG2CK669Eu
      STeo12kthaxAcA4lMUBbXVkpZAWCcxC5QIItjTCAYEsjDCDY0pTMAJqmXdbySgLBRnKWAWIr
      M5w4NcDJk6fIrnMtrtXlBaLp/CUd2/fkDzj0zp/n/R/9OKquo2sq9/3BR/jFe97B/U88y8d+
      5V5+5rab+IO/+jK/8o7X8mdfuJ+Rp+6n48CdhNPKuq5LILgQZxkgn0lS37oTh7FAKpOhr7eX
      3oER4sFFTvSe4nhPP7l0nJ6Tvbxw4hS5TILBwQGGxqYp5POoSgH/coBsYpWVcJKhvuMMjc2w
      6F9EU7Is+FcA+PGjA/zp5/+dsugUS1kNJJm7334PVRWV+Dw1/M2/f51b9+7ive96G3JFB8n5
      Xo70THLz3mZEkqhgIznLALquMT05RlqRifvHCGUgsbxIMJakurkDr01mfmqG9q69WGSNXD4P
      koGV5cXiCTSVaCyOkkkRT+UIRVN0bm8mGo2i6wXCpyfGcppVYrE4qYKKklglGk9Q07KLOw60
      89TzfYSmepg3NHNDczkgU++RGVjVqLaJNAjBxnJWqEySZHRdI5dNY69vxxJdxFtbj90oowOy
      bMBbWcbIqZPEIjFcTgsKErJsKKY0yAYS4QBjERVXQxcerwcJyKVijIxkUCUPAL947yE+9dlP
      0PmmXyB48ilGHPUc/ubXSajwK795L/39T/Hrv/ERZEnm4MGD3L6nGUfAhiHswWwUJhBsHBdM
      hdA1DR3prEUssskIc0shovE0Bw/sRVPVYhLc6f2apoIkr+X4nDkPaykIYlD81tC+Hu75gkdI
      sszLf28tDi+tzQ4MRhMSnPMgy/K5D/b5ziMQXAus256SJGEyiwVLBa8OSlI+vXTV+M3WBUqm
      XQrdUmpfD/csIsGCLU1JSgBZlkvSEAVOj1grTYukVPdcSu1r/Z5LMiBGILhWKGkVaDO9V5x+
      ZdPkXqKpn7O92VxwDqarpHd6q7T3fAnahk9+8pOfvPqXcy5jg73MLfhJK0YWx0+Q1N14nSZ+
      /KMHaGjZhsl4pd5UefapJ4kns7jcDnpOnGDev4TPV87hRx+lpa2d5PIMT/ZO0tFctyH3pOsa
      w/1HWQwWqKl0c+Lo8yzML+CqqGLo5HEW/H5sHh/PPX6YioZWDPkI33/kOTq3t12xdioW4qnD
      z1C1vR01PM9zp6bIFxQsWpqTA6MsrYRwmRSePTlOa1Md4wM9zIfT1FSUX6GyxtjQIH7/ArGM
      TmB+nHm/n5xkJTA7ypx/gYxixj96nKRchtdp5qEffY+a5u1YrvA7zqaiDAyOMD09Q7nPy7Gj
      L5BMZ/G47bxw9AUW/ItU1vl4+IEnaNvRRjwwx9M9o7Q3nxmOW7ISIK3A/v03Eg8tItvKSUcW
      ycRWkK3ejfnVyMfJajbsLg+Z8Ao1rbvobPKxEk5S5jCxtJrEH07hs29kQE6ic/ceTBIoiQCW
      qnYO3tDO+PA4lvI6DnRvY34pQIXPi9+/wsLCCpUV7g1RtrvK2dHagA5EV8M4XE7cbhfzSwH2
      7d+P3aCRVzQMap6MqpHOa8jqpSUvXhiZ7bu6qfa5QZLI6TL79u0nGlgkrUrs338jsVU/BkcF
      qdV5suHi9hXMq7aG1eFlz54uLEYD+VwSJBNOp4tcaJaqbfvY3VbJXCCOz21hMZBgOZTA6zx7
      ap0STo0IrBXMElYjjM2Faa7fmOGSusnDrbfsw5JdZjacK3aL6TqSJOGpbiS2OAkGC4YNbA+/
      tIEtSVIxAq5pyLJhbQY8SZIw2stQ0qukCuAwb4wBpZc0+KrbuunuaGR+fBSF4metAxLQ3FLL
      SG8v9rKaDdEFnamRfhK6g23NNWd/r/qZzeJ3LDG8EKOldmNMrxUyHD/eQ3vXHrzeKg7euBcl
      vsJyPFtMt9c0ZEnC7aslHppDxcTLM2lKZgCvzUjPieOU1zZhdzior61Clc247I6zUi8ul0Im
      wcjIKP6Iwrb2ZkJzo4wvxqnxubDbHVhNOhXVdTidzouf7BLRtTwjA6MEg4tEVDtadI7jA3Ns
      39WBlgzQMzhNc301drudCqcVi7cS1wbpx8MBFoJBJkfGCa4sMjY2gWRz0tFYR+/JHgqyBYvZ
      gsNdiVrIUV/jw+GwX7mwrhIIRcnGV1kORXFZZHp6TlJZ14TbZqSn5zi+mmbsdjv1tdUgG3HY
      nVxxDReIh1ZQZTPz05PEohFGRkcJp1XqW3cSneljaD5OU5Ubu8uFVc3ia2w55/suWS/Qmqwk
      XbU0iRc1JEk6a3uzKJ3+mQb/Zmuf756v5nd8Me2L3bPoBhVsaUQkWLClEQYQbGmEAQRbDJ18
      /kz3rzCA4LoiszzM7/zJX5IrFPjuDx9A13Wy2Qza6exPTVVRVRVFUVAUlXw+j67rqEqBfKEA
      ZPne9x5k8PiThDMlSoYTCC4XXclT4TLw7MlRkskkfUce4cRUEKurgko5iT+SoqnayUwElmcn
      qCu3suPWQxSWhxgZm+Ku97yHfD5PNBjBGZkVJYDg+qO56yb8g8dQNBgcX+SX3n8v+dgKyXiM
      t77rPXhNGjfdeTeNDXW86bYDBFYCLK+EkAtZAtEUAOlkAtlWJgwguL6QLQ5qKsq58zW7yMsO
      btq/k+9881uU13dQUduE22bCVVaJwyJTXV2N2eHB57aRKyi4vD5cNgvV1ZWUVVZDPiniAILr
      HR1dA6QLB71eKTAmDCDY0vx/SodHvz0lTnYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sales Qty by Market' width='192'>
      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
      1BgGYLCo+f+6Oa6xgboxgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      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
    </thumbnail>
    <thumbnail height='29' name='Year' width='184'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
