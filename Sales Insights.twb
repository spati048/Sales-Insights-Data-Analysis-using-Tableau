<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.0710.1712                               -->
<workbook original-version='18.1' source-build='2025.2.1 (20252.25.0710.1712)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelRelationshipPerfOptions />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
        <calculation class='tableau' formula='&quot;&quot;' />
      </column>
    </datasource>
    <datasource caption='transactions+ (sales)' inline='true' name='federated.0pq6utx07uqko817v2jl51vro2ve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0c9pyc31qut2j11awaply0b7yxd4'>
            <connection class='mysql' dbname='sales' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='spati048' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='transactions' table='[transactions]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='customers' table='[customers]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='date' table='[date]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='markets' table='[markets]' type='table' />
          <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='products' table='[products]' type='table' />
        </relation>
        <cols>
          <map key='[currency]' value='[transactions].[currency]' />
          <map key='[custmer_name]' value='[customers].[custmer_name]' />
          <map key='[customer_code (customers)]' value='[customers].[customer_code]' />
          <map key='[customer_code]' value='[transactions].[customer_code]' />
          <map key='[customer_type]' value='[customers].[customer_type]' />
          <map key='[cy_date]' value='[date].[cy_date]' />
          <map key='[date]' value='[date].[date]' />
          <map key='[date_yy_mmm]' value='[date].[date_yy_mmm]' />
          <map key='[market_code]' value='[transactions].[market_code]' />
          <map key='[markets_code]' value='[markets].[markets_code]' />
          <map key='[markets_name]' value='[markets].[markets_name]' />
          <map key='[month_name]' value='[date].[month_name]' />
          <map key='[order_date]' value='[transactions].[order_date]' />
          <map key='[product_code (products)]' value='[products].[product_code]' />
          <map key='[product_code]' value='[transactions].[product_code]' />
          <map key='[product_type]' value='[products].[product_type]' />
          <map key='[sales_amount]' value='[transactions].[sales_amount]' />
          <map key='[sales_qty]' value='[transactions].[sales_qty]' />
          <map key='[year]' value='[date].[year]' />
          <map key='[zone]' value='[markets].[zone]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>market_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[market_code]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>market_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>order_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[order_date]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>order_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_qty</remote-name>
            <remote-type>3</remote-type>
            <local-name>[sales_qty]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_qty</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>sales_amount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[sales_amount]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>sales_amount</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>currency</remote-name>
            <remote-type>130</remote-type>
            <local-name>[currency]</local-name>
            <parent-name>[transactions]</parent-name>
            <remote-alias>currency</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[transactions_391FA9E29C774570AFEEF250A6FFE0AB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_code (customers)]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>custmer_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[custmer_name]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>custmer_name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>customer_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[customer_type]</local-name>
            <parent-name>[customers]</parent-name>
            <remote-alias>customer_type</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[customers_5446D4624F074ED5B875B7AE840F0323]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>13</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cy_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[cy_date]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>cy_date</remote-alias>
            <ordinal>14</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_DATE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_DATE&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>month_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[month_name]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>month_name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date_yy_mmm</remote-name>
            <remote-type>130</remote-type>
            <local-name>[date_yy_mmm]</local-name>
            <parent-name>[date]</parent-name>
            <remote-alias>date_yy_mmm</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[date_951B34D41F924B13B9E4834E34AE31CB]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_code]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_code</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>markets_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[markets_name]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>markets_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zone</remote-name>
            <remote-type>130</remote-type>
            <local-name>[zone]</local-name>
            <parent-name>[markets]</parent-name>
            <remote-alias>zone</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[markets_80B6ABC978864C7E91EA2BAE4229D5F8]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_code (products)]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_code</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>false</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_8F348EAE58F94D0CA332F38CB519AB3C]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>product_type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[product_type]</local-name>
            <parent-name>[products]</parent-name>
            <remote-alias>product_type</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>45</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <object-id>[products_8F348EAE58F94D0CA332F38CB519AB3C]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
      </column>
      <column caption='customers' datatype='table' name='[__tableau_internal_object_id__].[customers_5446D4624F074ED5B875B7AE840F0323]' role='measure' type='quantitative' />
      <column caption='date' datatype='table' name='[__tableau_internal_object_id__].[date_951B34D41F924B13B9E4834E34AE31CB]' role='measure' type='quantitative' />
      <column caption='markets' datatype='table' name='[__tableau_internal_object_id__].[markets_80B6ABC978864C7E91EA2BAE4229D5F8]' role='measure' type='quantitative' />
      <column caption='products' datatype='table' name='[__tableau_internal_object_id__].[products_8F348EAE58F94D0CA332F38CB519AB3C]' role='measure' type='quantitative' />
      <column caption='transactions' datatype='table' name='[__tableau_internal_object_id__].[transactions_391FA9E29C774570AFEEF250A6FFE0AB]' role='measure' type='quantitative' />
      <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
      <column caption='Custmer Name' datatype='string' name='[custmer_name]' role='dimension' type='nominal' />
      <column caption='Customer Code (Customers)' datatype='string' name='[customer_code (customers)]' role='dimension' type='nominal' />
      <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
      <column caption='Customer Type' datatype='string' name='[customer_type]' role='dimension' type='nominal' />
      <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Date Yy Mmm' datatype='string' name='[date_yy_mmm]' role='dimension' type='nominal' />
      <column caption='Market Code' datatype='string' name='[market_code]' role='dimension' type='nominal' />
      <column caption='Markets Code' datatype='string' name='[markets_code]' role='dimension' type='nominal' />
      <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
      <column caption='Month Name' datatype='string' name='[month_name]' role='dimension' type='nominal' />
      <column caption='Order Date' datatype='date' name='[order_date]' role='dimension' type='ordinal' />
      <column caption='Product Code (Products)' datatype='string' name='[product_code (products)]' role='dimension' type='nominal' />
      <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
      <column caption='Product Type' datatype='string' name='[product_type]' role='dimension' type='nominal' />
      <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
      <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column caption='Zone' datatype='string' name='[zone]' role='dimension' type='nominal' />
      <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (MONTH(Cy Date))' hidden='true' name='[Action (MONTH(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[mn:cy_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Cy Date))' hidden='true' name='[Action (YEAR(Cy Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:cy_date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='product_code' />
        <field-sort-custom-order field='customer_code' />
        <field-sort-custom-order field='market_code' />
        <field-sort-custom-order field='order_date' />
        <field-sort-custom-order field='sales_qty' />
        <field-sort-custom-order field='sales_amount' />
        <field-sort-custom-order field='Calculation_1180787578417401856' />
        <field-sort-custom-order field='currency' />
      </field-sort-info>
      <filter class='categorical' column='[market_code]' filter-group='2'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[market_code]' member='&quot;Mark001&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark002&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark003&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark004&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark005&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark006&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark007&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark008&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark009&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark010&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark011&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark012&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark013&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark014&quot;' />
          <groupfilter function='member' level='[market_code]' member='&quot;Mark015&quot;' />
        </groupfilter>
      </filter>
      <filter class='quantitative' column='[sales_amount]' filter-group='2' included-values='in-range'>
        <min>1.0</min>
      </filter>
      <object-graph>
        <objects>
          <object caption='customers' id='customers_5446D4624F074ED5B875B7AE840F0323'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='customers' table='[customers]' type='table' />
            </properties>
          </object>
          <object caption='date' id='date_951B34D41F924B13B9E4834E34AE31CB'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='date' table='[date]' type='table' />
            </properties>
          </object>
          <object caption='markets' id='markets_80B6ABC978864C7E91EA2BAE4229D5F8'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='markets' table='[markets]' type='table' />
            </properties>
          </object>
          <object caption='products' id='products_8F348EAE58F94D0CA332F38CB519AB3C'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='products' table='[products]' type='table' />
            </properties>
          </object>
          <object caption='transactions' id='transactions_391FA9E29C774570AFEEF250A6FFE0AB'>
            <properties context=''>
              <relation connection='mysql.0c9pyc31qut2j11awaply0b7yxd4' name='transactions' table='[transactions]' type='table' />
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[customer_code]' />
              <expression op='[customer_code (customers)]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='customers_5446D4624F074ED5B875B7AE840F0323' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[order_date]' />
              <expression op='[date]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='date_951B34D41F924B13B9E4834E34AE31CB' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[market_code]' />
              <expression op='[markets_code]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='markets_80B6ABC978864C7E91EA2BAE4229D5F8' unique-key='true' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[product_code]' />
              <expression op='[product_code (products)]' />
            </expression>
            <first-end-point object-id='transactions_391FA9E29C774570AFEEF250A6FFE0AB' />
            <second-end-point is-db-set-unique-key='true' object-id='products_8F348EAE58F94D0CA332F38CB519AB3C' unique-key='true' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_91B45E2132144B3E91A0DC88B8CFA725]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Months' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_277EC3700108463BA82F86D7D88FF6AC]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4_CF71C5E2B1E543AFAF4B3A4FF59687CD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Quantity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5_60A0B7A77EA94AE588C69CF8FFEACF79]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6_DB3174A6C6EE454C8A8F5A0A7B7EC739]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Sales Qty by Market' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7_C3FE5C453C4E4F738A25DD7DEEC6A420]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Customers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 8 (generated)' name='[Action8_8495947AD3B349F796BE6FF232A02AB5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Top 5 Products' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 9 (generated)' name='[Action9_A4A023A1DE794BE3AE0CF314CA01BD95]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Revenue By Year' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Months'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]' value='iLLL' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{08479541-101E-4BE2-99B2-41BD7886CEBC}' />
    </worksheet>
    <worksheet name='Quantity'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='16'>Sales Quantity</run>
                <run>Æ&#10;</run>
                <run fontcolor='#e15759' fontname='Tableau Bold' fontsize='16'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.2413811683654785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05A21EC3-B713-4C5F-AEF0-E7037C182C07}' />
    </worksheet>
    <worksheet name='Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontname='Tableau Bold'>Total Revenue</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='20'>Total Revenue</run>
                <run>Æ&#10;</run>
                <run fontcolor='#59a14f' fontname='Tableau Bold' fontsize='15'><![CDATA[<[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]>]]></run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CE6B7BD4-1994-4BD2-8175-F4745D09EF1C}' />
    </worksheet>
    <worksheet name='Revenue By Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' scope='rows' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]' value='iLLL' />
            <format attr='font-size' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]' value='8' />
            <format attr='color' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' palette='red_green_white_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontsize='8'>&lt;</run>
                <run fontsize='8'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run fontsize='8'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</rows>
        <cols>([federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok] / [federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok])</cols>
      </table>
      <simple-id uuid='{B70DF143-4D82-4EB6-B480-B197B7892472}' />
    </worksheet>
    <worksheet name='Revenue by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='126' />
            <format attr='cell-h' value='42' />
            <format attr='cell' value='42' />
            <format attr='cell-q' value='210' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,,.00M;(#,##0,,.00M)' />
            <format attr='font-family' data-class='subtotal' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='Tableau Bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' value='96' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontname='Tableau Bold'>&lt;</run>
                <run bold='true' fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run bold='true' fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{1B839907-A669-40E4-B680-DC1516329BFF}' />
    </worksheet>
    <worksheet name='Sales Qty by Market'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column caption='Markets Name' datatype='string' name='[markets_name]' role='dimension' type='nominal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[markets_name]' derivation='None' name='[none:markets_name:nk]' pivot='key' type='nominal' />
            <column caption='Sales Qty' datatype='integer' name='[sales_qty]' role='measure' type='quantitative' />
            <column-instance column='[sales_qty]' derivation='Sum' name='[sum:sales_qty:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]' value='92' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;</run>
                <run fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#f28e2b' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</cols>
      </table>
      <simple-id uuid='{DACCFF2F-ABDA-4B9A-8812-67A11E9C426D}' />
    </worksheet>
    <worksheet name='Top 5 Customers'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Customer Code' datatype='string' name='[customer_code]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[customer_code]' derivation='None' name='[none:customer_code:nk]' pivot='key' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1180787578417401856])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:customer_code:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='114' />
            <format attr='cell-h' value='38' />
            <format attr='cell' value='38' />
            <format attr='cell-q' value='190' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]' value='84' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run fontname='Tableau Bold'>&lt;</run>
                <run fontname='Tableau Bold'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run fontname='Tableau Bold'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{E8E1B5C0-21C3-4EF0-9C13-3E750413E179}' />
    </worksheet>
    <worksheet name='Top 5 Products'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
          </datasources>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Normalised Amount' datatype='real' name='[Calculation_1180787578417401856]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [currency]== &apos;USD&apos; THEN [sales_amount]*74 ELSE [sales_amount] END' />
            </column>
            <column caption='Currency' datatype='string' name='[currency]' role='dimension' type='nominal' />
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[product_code]' derivation='None' name='[none:product_code:nk]' pivot='key' type='nominal' />
            <column caption='Product Code' datatype='string' name='[product_code]' role='dimension' type='nominal' />
            <column caption='Sales Amount' datatype='real' name='[sales_amount]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1180787578417401856]' derivation='Sum' name='[sum:Calculation_1180787578417401856:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]'>
            <groupfilter function='level-members' level='[yr:cy_date:ok]' user:ui-action-filter='[Action1_60424B6877D542CB9DA04B0D62A3AEC2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Calculation_1180787578417401856])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod001&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod002&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod003&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod004&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod005&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod006&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod007&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod008&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod009&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod010&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod011&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod012&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod013&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod014&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod015&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod016&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod017&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod018&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod019&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod020&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod021&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod022&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod023&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod024&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod025&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod026&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod027&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod028&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod029&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod030&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod031&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod032&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod033&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod034&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod035&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod036&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod037&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod038&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod039&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod040&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod041&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod042&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod043&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod044&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod045&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod046&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod047&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod048&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod049&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod050&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod051&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod052&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod053&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod054&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod055&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod056&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod057&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod058&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod059&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod060&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod061&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod062&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod063&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod064&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod065&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod066&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod067&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod068&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod069&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod070&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod071&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod072&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod073&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod074&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod075&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod076&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod077&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod078&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod079&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod080&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod081&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod082&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod083&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod084&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod085&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod086&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod087&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod088&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod089&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod090&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod091&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod092&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod093&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod094&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod095&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod096&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod097&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod098&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod099&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod100&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod101&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod102&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod103&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod104&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod105&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod106&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod107&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod108&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod109&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod110&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod111&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod112&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod113&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod114&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod115&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod116&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod117&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod118&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod119&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod120&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod121&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod122&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod123&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod124&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod125&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod126&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod127&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod128&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod129&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod130&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod131&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod132&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod133&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod134&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod135&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod136&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod137&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod138&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod139&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod140&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod141&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod142&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod143&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod144&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod145&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod146&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod147&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod148&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod149&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod150&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod151&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod152&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod153&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod154&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod155&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod156&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod157&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod158&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod159&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod160&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod161&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod162&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod163&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod164&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod165&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod166&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod167&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod168&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod169&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod170&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod171&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod172&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod173&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod174&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod175&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod176&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod177&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod178&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod179&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod180&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod181&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod182&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod183&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod184&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod185&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod186&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod187&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod188&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod189&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod190&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod191&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod192&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod193&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod194&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod195&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod196&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod197&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod198&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod199&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod200&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod201&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod202&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod203&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod204&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod205&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod206&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod207&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod208&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod209&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod210&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod211&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod212&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod213&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod214&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod215&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod216&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod217&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod218&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod219&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod220&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod221&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod222&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod223&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod224&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod225&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod226&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod227&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod228&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod229&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod230&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod231&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod232&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod233&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod234&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod235&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod236&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod237&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod238&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod239&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod240&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod241&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod242&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod243&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod244&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod245&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod246&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod247&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod248&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod249&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod250&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod251&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod252&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod253&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod254&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod255&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod256&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod257&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod258&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod259&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod260&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod261&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod262&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod263&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod264&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod265&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod266&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod267&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod268&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod269&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod270&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod271&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod272&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod273&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod274&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod275&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod276&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod277&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod278&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod279&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod280&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod281&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod282&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod283&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod284&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod285&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod286&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod287&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod288&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod289&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod290&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod291&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod292&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod293&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod294&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod295&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod296&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod297&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod298&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod300&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod301&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod302&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod303&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod304&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod305&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod306&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod307&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod308&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod309&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod310&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod311&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod312&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod313&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod314&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod315&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod316&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod317&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod318&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod319&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod320&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod321&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod322&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod323&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod324&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod325&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod326&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod327&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod328&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod329&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod330&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod331&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod332&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod333&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod334&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod335&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod336&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod337&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod338&quot;' />
                  <groupfilter function='member' level='[none:product_code:nk]' member='&quot;Prod339&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (YEAR(Cy Date))]</column>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='cell-w' value='102' />
            <format attr='cell-h' value='34' />
            <format attr='cell' value='34' />
            <format attr='cell-q' value='170' />
            <format attr='text-format' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' value='c#,##0,.00K;(#,##0,.00K)' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]' value='76' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</rows>
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]</cols>
      </table>
      <simple-id uuid='{E2FE4F8C-B040-49E1-9FE9-46B1DCBDA9E7}' />
    </worksheet>
    <worksheet name='Year'>
      <table>
        <view>
          <datasources>
            <datasource caption='transactions+ (sales)' name='federated.0pq6utx07uqko817v2jl51vro2ve' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Blank' datatype='string' name='[Parameter 1]' param-domain-type='any' role='measure' type='nominal' value='&quot;&quot;'>
              <calculation class='tableau' formula='&quot;&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0pq6utx07uqko817v2jl51vro2ve'>
            <column caption='Cy Date' datatype='date' name='[cy_date]' role='dimension' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Month' name='[mn:cy_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[cy_date]' derivation='Year' name='[yr:cy_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]'>
            <groupfilter function='level-members' level='[mn:cy_date:ok]' user:ui-action-filter='[Action2_91B45E2132144B3E91A0DC88B8CFA725]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pq6utx07uqko817v2jl51vro2ve].[Action (MONTH(Cy Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='5' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</cols>
      </table>
      <simple-id uuid='{8B0D0F2F-A091-4F67-91E4-BD84B9D2F04A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98222' id='6' type-v2='empty' w='99000' x='500' y='889' />
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='3111' id='7' name='Year' show-title='false' w='28438' x='37938' y='1778' />
        <zone h='6222' id='8' name='Months' show-title='false' w='50188' x='23375' y='6000' />
        <zone h='10667' id='9' name='Revenue' show-title='false' w='18500' x='3500' y='11111' />
        <zone h='11000' id='10' name='Quantity' show-title='false' w='20000' x='25063' y='11667' />
        <zone h='72667' id='11' name='Revenue by Market' w='22188' x='1750' y='22333' />
        <zone h='73556' id='12' name='Sales Qty by Market' w='22875' x='24188' y='22222' />
        <zone h='38444' id='13' name='Revenue By Year' w='45625' x='50625' y='13111' />
        <zone h='11111' id='14' name='Revenue By Year' pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type-v2='color' w='12625' x='80438' y='5000' />
        <zone h='41444' id='15' name='Top 5 Customers' w='20688' x='48063' y='53444' />
        <zone h='36778' id='16' name='Top 5 Products' w='23625' x='70563' y='54333' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1850' minheight='1850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98222' id='17' param='vert' type-v2='layout-flow' w='99000' x='500' y='889'>
                <zone fixed-size='28' h='3111' id='7' is-fixed='true' name='Year' show-title='false' w='28438' x='37938' y='1778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='56' h='6222' id='8' is-fixed='true' name='Months' show-title='false' w='50188' x='23375' y='6000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='96' h='10667' id='9' is-fixed='true' name='Revenue' show-title='false' w='18500' x='3500' y='11111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='99' h='11000' id='10' is-fixed='true' name='Quantity' show-title='false' w='20000' x='25063' y='11667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38444' id='13' is-fixed='true' name='Revenue By Year' w='45625' x='50625' y='13111'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11111' id='14' name='Revenue By Year' pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type-v2='color' w='12625' x='80438' y='5000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='73556' id='12' is-fixed='true' name='Sales Qty by Market' w='22875' x='24188' y='22222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72667' id='11' is-fixed='true' name='Revenue by Market' w='22188' x='1750' y='22333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41444' id='15' is-fixed='true' name='Top 5 Customers' w='20688' x='48063' y='53444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36778' id='16' is-fixed='true' name='Top 5 Products' w='23625' x='70563' y='54333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0F81EC26-B8E8-4482-BC7C-4D3F33617DD6}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{929A6FED-67E5-4F49-8044-184BFB288EF9}' />
    </window>
    <window class='worksheet' name='Quantity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{4AD623FE-7913-4850-AB63-EB3FAB68AE8A}' />
    </window>
    <window class='worksheet' name='Revenue by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[:Measure Names]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{931C9D93-E317-4510-B21B-974E8A81CEC9}' />
    </window>
    <window class='worksheet' name='Sales Qty by Market'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:sales_qty:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:markets_name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C585C6D2-7B4B-46C3-B486-7A8FBE2FA789}' />
    </window>
    <window class='worksheet' name='Top 5 Customers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:customer_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{10C64DF0-4AEF-4E45-AA52-71CA43DE9AC7}' />
    </window>
    <window class='worksheet' name='Top 5 Products'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[none:product_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ECDB8F52-A124-421C-911B-F6FF61F84A05}' />
    </window>
    <window class='worksheet' name='Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D7AAB3B-F257-4B84-A0A7-8810F4B41481}' />
    </window>
    <window class='worksheet' name='Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15819361-4018-45B7-A9EF-BFC8EE8B8F82}' />
    </window>
    <window class='worksheet' name='Revenue By Year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pq6utx07uqko817v2jl51vro2ve].[sum:Calculation_1180787578417401856:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[mn:cy_date:ok]</field>
            <field>[federated.0pq6utx07uqko817v2jl51vro2ve].[yr:cy_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1F345DAA-4D4E-466A-A396-6BEC8E068417}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Months' />
        <viewpoint name='Quantity' />
        <viewpoint name='Revenue' />
        <viewpoint name='Revenue By Year'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Revenue by Market' />
        <viewpoint name='Sales Qty by Market' />
        <viewpoint name='Top 5 Customers' />
        <viewpoint name='Top 5 Products' />
        <viewpoint name='Year' />
      </viewpoints>
      <active id='6' />
      <simple-id uuid='{E33F36FA-8C77-46B0-AB88-2F18D2CB4289}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='49' name='Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='92' name='Quantity' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='99' name='Revenue' width='192'>
      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
      yNg1/w+im/papfre/wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Revenue By Year' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue by Market' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sales Qty by Market' width='192'>
      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
      z+2z7bYpIHYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customers' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Products' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nO2dV3BcV5rffzd07kaju5EBgsgEcxJFiUEiKVKJHIWZXe/OzmyaWrv8sE4P
      dq3fXGVX2VWuctU+2A+e9dbulHa0szuaoBGVSErMOQcQJHKOndC5+wY/NEgCpKgZQRiCo3t+
      TyxcdN/zged/7vnOOd//SqZpmggEFkVe6gYIBEuJEIDA0ggBCCyNEIDA0ggBCCyNEIDA0ggB
      CCyNEIDA0ggBCCyNEIDA0ggBCCyNEIDA0ggBCCyNEIDA0ggBCCyNEIDA0ggBCCyNEIDA0ggB
      CCyN5QRgGAaapi11M5YEwzAoFApL3Ywl4XGxW04AUPxjWBHTNEXsD2FJAQgE91CXugFLwfGe
      zznc/dFSN+PJY4KJiSRJS92SJ89jYrekABLZOIPR/qVuhuApQEyBBJZGCEBgaZ5qARQyCWYy
      1ly2EzwZFpQDZGNjnDxykIGYBMi4/OW0b9zKusYyFFlisVKsSM95rhlreXltOfl0hJvnTnCp
      c5B0wUR1lbP9tf2srStBsWJSJ1gUFiQALZMgYy9j7xt7CdnzxCYHOH38n+ju38WBF1fhVhen
      QxYyM8wYxSdAZOQOUVszb//Ja5S5VWbGb/Dzn/8DiVe/z/bmkqf7USZ4alnwKpCs2nF7vHjd
      4PUH2V/i4sOjN5lKtLGsREIzTFRVxcynCcdzlJYFsMsSejZOf08/SdlPU9MyfA5l3vfq+QQT
      41EMu5eCbnLvcVLZ+jyVbQ+eLiU1G3h+1S2ujoUxhAAEC2TRlkFtTj82VSOXLxAb7uD07Qzr
      Wks48ekxIq4V/NF3d6OO3+LgkUs4a5sJGN1cOH2ObW+8SXuZE8nMM9F5lg9P3MJZVodPztDf
      30/1tq0gPej4pmli6AWyqUm6R7Is216O8qUtEwgez6IIwDRyjHTfJKn58fuc6IksU/03OR2v
      Zd2bP2B1tRczM8VnF25R+/wbvLiyAjBYffsYn35+ioo39+CO93HiwhAbD3yPjbUlAAxf+Dln
      5+xepyZ7udk9SCwSYTqSpn7Lt9jS6F20nENgPRYsgHDXBd7tG8KhgGkaOLzVbHrhRUIuiSiQ
      zSts3LaLNTXFDppMRkhIHrbWhGa/Qaa0biWhzmNEZwrkJ4eRAy20VPkee09ZseNyuci6vXiS
      KSaHRki1VuC35HaeYDFYcNcprV/Nc5t3EXTL2B1OHA47NlVFloovnCmtaaS+zHd/dNa1LIYm
      oSgPZuuybEMzCmSzOez5Ao6SUuzK48dzV6iOtcFaTNPA0PLc+Pw9jpz0sP+FNhwiCRAsgAV3
      G8XhJhAqoywUpMTrxmFTkef0XUmCuQuiDocfm00nk8/f/1khn8DQbXg8LlS7SjYeJa99+Rub
      JElClhVUu4vq+iryk1NkrXnAUbAIPLFx01ESotatceVmL5lcjlw2Qc+Vc6S8bVT4VQKVyzHi
      d7kzFCaXy5GOj3G7ewwoJr7Xj77PzcFp0tksuVyOzMwoly914V2+DLdikpzu48TZ66RyxbP+
      mdGbHD9zl+STClDwO8mCpkCq00tVZRWOxyy/OLwh6mrz2OZcl2w+Nr+4m9yRI/zDO2dRJB1H
      9Xr279uIVwHKGtn9XIRDn/+c65ICjnLWNK3GG3QBUFVXycljv+RUVsKumhQ0WL7hNV7aXI9N
      MknlUkyFY+hG8QmiZ2JMTruwZumL4DdFetJviTRNg2wqiSbZcbsdj+ziGlqeggGKqqLI8vwV
      HtOgUNAwTJBVFVWW+aqbwIZh8MtrP+Wfb/z4a8ci+N3nia+fSJKMy1vy2Ouyasfx2A/L2Oz2
      30q7BNZErJ0ILI0QgMDSPPEcYKkxDIN8IY+qWu8AhT7riOGw4DTycbFbcg9VlmRUxbbUzXji
      SOggI2Kfg5gCCSyNEIDA0ggBCCyNJXOAmewMqaT1DkkYpoGuadhs1kuCDcNA1x+N3ZICONHz
      mdgJFgBiCiSwOEIAAksjBCCwNAvKAQxdI5tOUZgtRJFkBbvThcOmLGp9bjo8xLQZor7MhWkY
      5LIZsvkCpglICm6vF7sqi5pgwYJZkAAy0wMc/OAXpOzVOGQTJAmbv4bNz26hodyzaI+VSO9F
      zhvPUh9yERu5xclT1wlnC0iShF4oUFK/gRd3bKLcbb1jDYLFYUECMA0dd1UbO3e8Qsipk03F
      6bp+itMnLlH6+k6CzsUfk22uAGu2vUxlVRC3TSaXnOLkh7/iwt1lvLKhSlijCBbEgpdBJVlB
      tdmxO8DucLFmw/OMfH6CyEwOr55mOmEQCriYHuxjICqzbtMKXEaWicEeOruHyCg+GppaaFpe
      jUuVABMtM8Po6CAjYwkkpwdjKgmzJhKeUB2esgdVxg5viIpSO915UfMlWDiLtg9gmAW0vIEk
      ScTHOjh+NUZTEO6MZwnVtGLqOQauHud4T5a1G9awzIhy68whRmf28uKGWtT8DNdOfMqNqEpr
      UwNuM0XP1ExRAPOMsXSy8Wl67lyjYybElmcrxegvWDALFoBp6BTyefIqGFqKGyePkXS2UlZq
      Jx+HaNdVujfv5/U31xB02yjMjHJrOM4zL7zOmroSwKQi4OTTExeYaq3BE+2mJ+xgz2uvUl9a
      3K0rZ2KeMdZ053F++fkl4lmFiua17HhxG8tKrXeyUbB4fA1jrPP8+G4vNkVCUR0sX7Odt55f
      Q4nNZApw1K5l77a1hDzFW2TS0+QNF2Wl98ohJTyltfhcHcRn0ujT0zhCTZSXPn6bvqz9BX7Q
      9jyJ6CRdV89x5MNPef61V2ivXLzEW2AtFiyAUOsW9m17hZBbKhawK/OXI90eNzblwddLKEiS
      iYnJPcdb0wTd0DEB0zDg4SL4L0CSbZSEatn80luUnn+fS+c7qX99c9FZQiD4iix44JRkFZvD
      gcNhR1V+fcd1eYI4lAJT0RlMANMgFRsknfVSWuLCXVpCLjLKTFqneFkjN5vgmqZJJhknW9C5
      V8BmGgaSpGAaRVHpWp5UOosxa4tiFLKk0jmEZ5bgy3hih+FsvhDrG4McPXWUZGMNNjPNYO8w
      ZWtfosIrI0ltlNs+4rMjn7G8zIOmaUz3T0Fb8fOdp96nX6sk6PdiV6CQidI/mGTtnjY8CkQH
      bnDw3DRv7N9DqcdGsucE71118+Yfbif4pIIU/M6xoJpgLZtkOp4iEKrE8YiETHKpCFNxnYrK
      CuxzpiamlmZ0oJeBkTCa7CBYvZzWxuqir6dpkI6O09s/QlqXsLn8VAWdmK4yqkudpGPjjIxM
      EE8XABMUO2U1jSyr8qNKJtnENIOTWZbX1+KwyeRjw/SFVZY3V+Gc0zrhCySYyxIYY5lgmpiz
      S5sPv7d1XnOkh163ZBYziDm/IIyxBF+LJTDGkh7t2A9ff/yHxbkfwaIiVg8FlsaSFWHV/lqe
      a9ix1M148pgmhmEgKxZcMzZNDMNEVuaP+ZY0xtI0DbsVzaF0vWgO5Xis++o3lsfFLqZAAksj
      BCCwNEIAAksjBCCwNJZcBbo9cZObE9eWuhlPHHN2FUix4CrQ42K3pAB6p7s52PHLpW6G4ClA
      TIEElkYIQGBpnmoBGFqevCZO9At+eywoByikYty5dYWpFICEw+2nprGV+grvoioqNnCNLrOZ
      rS0B9FyKoZ5OeoenyekmisNP+4aNLAu6xAE5wYJZUH/NJabo6hvE7gsRKvVhpkY4/IufcKJj
      En0RT1akI8MMhTNgwkTPBS7cmsJTXktTYwMhdYqPf/Y+d6YLWOosh2BRWdgqkGliLymnbdU6
      yt3FH61dcYUPjp5ktPZN6nwShmkiyzKmXiCd1XB5XCiShKFliYaj5CUnwaAfhzpfg4aeI5nI
      YCp29Dk9u7r9RX5v1ZzSy/aVeAvvcK1zmJYdjdZczhJ8bRat3zh9NXhdd8hkciRzw3QMFljR
      VMqlzz9noFDDW99+AW96lFMnzhMxnDjIkZPL2b53B1UuGTBIjXdx7MwVUqYHl81kenQQ74Zn
      i3UAD9cJGGmmImn87b6nO5ERPNUsWABaLk00PI2UBpDQMhEkxYPbZSc7NUlP7xSpQQ2j4Tn2
      N1TgNRJcOXmGmeBa9q5fjmrmGbx6jOPHrvLq3g04EyMc+/witpXPsrehAhmDoStpOh+6r2kU
      iI/1cPrIYSaCz/H2iqAQgGDBLFgAM8O3OTw5g1OVUGwO6lY8w+7938KrmkxNQS6nsnb/G5R7
      ijtv8dHrDKedbN+1Cr8XwEPrphfoP/QJQxMr8E12oJVtYM+G1vs1vAmvg0dtHSRUdyn1zS2E
      e/oYmGyjpK5EiECwIBYsgEDjBvbumPUFUlRkeX65osvtRJUfbDtLsoqkPOwLZGKaBpIsYc76
      A/06JFnFG6hizfaX8bo+5PzFOzRVbcEnkgDBAvgavkCz5rg2G4r862t13d4y3HKekcnIfV+g
      +GQXM7kAQb8LbyhENjxIJFEAwNTzJFO54r9Nk5npcZJZ7YEvkK6RTefBpiLLJlo+TSSWQJ/1
      BdKzCSLRFMI6V/BlPLFxU/UE2NBWzZEzhwn3VWI304yNxWl4di9lbgmpopVaz4cc/vAg1UE3
      mg7Z6Ri0Fj/fd+UInXEXHo8Xhwr5dIypGZUtL7XiliEycotfnpni7Tf3EvDYSfWe4r3Lbr79
      /RfuGUwLBI+woJJIPZ9hJp3F6wtge+RgoUkhmyCeMikN+Jm7ymnqOcKTY4yOTpGXXYSqaqir
      DGKb9QXKJWOMjk2Q0SVsTh+hEjumw0/QYyOXihIOR5lJ5TExkVUHpWVVlAc8KJJJPjPDVKxA
      RUUQmyKjJacZTyhUVAeYW/wobFEEc7FkTbAQgOAeYvFEYGmEAASWxpJToGvDV7g+fmWpm/LE
      ERVhj8ZuSQEIXyDhC3QPMQUSWBohAIGlEQIQWBohAIGlseQRsqsjl7g4cnapm/HEMWcdkhXF
      euPe42K3pABGYkOc7D221M0QPAVYbygQCOYgBCCwNE+1APR8hkxeX+pmCL7BLCgHyCfDXL94
      mrEEgIzTG6BhxWqaa/yLqqho/xU6zRXsWBFEyybo7bhKZ984GQ0UZ4AN27bTXO4WvkCCBbOg
      /ppPRhgJJ6hrWc3q9hbKXRlOHfxHDl0aIm8s3smKbHyC8VgWTJjsu8LtEYPm9Vt5Yec21tdL
      HP3ZT7k+lhW+QIIFs2BfINVdSt3ypqIvUOsKmuvLOXj0POPN1SwrkdANUBQZU8uRSBXwlHhR
      ZQmjkGZibIKs7KGqsgyX7SFfIC1DLJrEtDmZ64pYvWInb6yc4wtUU4cRfYdrPWOsrha+QIKF
      sXi+QN5K3M4Ostk8M5k+rvUWWN0W4PRHHzNoNPAHf/QSvsQARw6fJuEM4jWTnMyVsvvAPuo8
      RV+gxPAtPjl6gZw9gEfVGBsepHzr43yBkoxNJAmsX9xpl8BaLIoATEMjMtFPKu/E43GQn4gy
      0NXDdL+Diq1vsWd5AKcxw6njZ5FadvL2ulokdEavHeHop2c58K3ncc0McvizK1Q99zpbGoJI
      mAxf+hWX59wnnwgzNh0hPjnCnc4uXO2vsLc9IAQgWDAL9wUaucPnnxi4bUWzqlQ8S92mFyn3
      ysQnYGYqRsOb32d7WwgJSE1FmDacPNtch92mAjaq2jYQGDhBOL4Fz2Q/ekkzaxsrcdiKo71d
      Veb5AmXjY9y53UUskUf2leNTNHRTpMCChbNgAdjdfipql1HikLE7nfiDFZSH/NikYkpaWr+C
      VXWB+3N2rZBE11RU9UFBgqK4MCWNdDqLms3hLK3GaXt8hy6pW8O+2lVo+RzJ2BSXTx7llOJm
      z4ZaVKEDwQJYsACcgSra16y/b477MIqqIEsPJic2ewl2m05e0wAbALqWxjRsuFwOFBmyiQQF
      3cShPL43S5KMzeEiUFnPmjV1fH61l+TaWkpFFixYAE9s+uz0BQnZctzqHi3OaowCI52XiSvL
      KPPb8VfUUoh2MzSdBsDIxRgYngaKB5m6Lp9gIJzGmC1gM/JxOm/24qiqwqWYZOLj3LjdS7ZQ
      3DjLTfdxvWOIzJMKUPA7yYLGTVm14/F4eNxArdid+LwS8hx5yfYSntn2LEc+OcQPryrYyKF5
      m3j99Wfw24CKFrauHObQT/+OE3YVQw3SXBXE6yw20UaKYz/9W2YMW9EYK5enrHUH+7Y2YZcg
      Ehni4tUp6urrcNoUclN3OX/FTe2qZbgWEqTAEjzxmmDT1ElGo+RlF6UlbhR5vor0fJacDja7
      HVWR5+/ymjq5XL64x2CzY1cVHl4d/XUIXyDBXJ74zFmSFHzBssdeV+xOHpNWgKTgcIrxXLB4
      iCV0gaURAhBYGkv6AoUT0yS0maVuyhPHMAx0Tcdmty11U544j4vdkgIQxljCGOseYgoksDRC
      AAJLIwQgsDSWPUHzTUt9HqmXEPxGWFIAB2/94hu1E7yl/jn+w66/Wupm/E4ipkACSyMEILA0
      QgC/DklZtD+SJKlf+l2ypAqLlyfMU50D5BJhkngJ+X47GzeS7KG5bjdb/HF+deMEyXnXvGxq
      +zZbyitxoDMzc5sjXccY1T1sbd5P2xe0aWLkAz4cHnnk53Z7Dc+teJ21gRCyFuFW3yFOjPdT
      mM3D3e5WdrXvo9nnRc+OcaH7Ey6FJ2erQevY/8xOJvo/4/L0BAag+jbyneZW7gwe4lok+lv4
      y1iHBQkgPdXPx796j4mCD0UCm9NHdctatqxrI+i1L9ooFu46zXljM29triY53cu5E2e4MxKm
      oAOqk5XPvcS2dU147V9xjJadVJZt4w+f+WPa/aUY8U/4dI4AJCXIzk3/lt+vcdM12UOkIFMR
      aKLGeYnxjIPykgYaAw/OrNrsIWq8KmejR7/gXuW8teM/87wzzK3pYRRXI29t/49UnPvv/GRo
      GOwt/GD3f6Ku0Mud6BQ+/wb+7MU1eI/+Dz6PRJGkEFtaX+BO5ApXpyeQbHW8tv67rLFd4czN
      mPBE+posSACGlsde0cq3tu0j5NBIxSa4euE0nx7LsH/fM5TYF0cChq6hzRpt5bNZgq3b+d5r
      dfidMulIP5+8f5iz7gB7VoW+2jTF1sCrq6tIjZ/iamEjK+cdD5Epq3yBV+tCHD7z3/hgfAId
      kGQV1TQomAa/OPtf+MX935dYu+qv+EFDjpNjj47+ztAOtvpSHDzz1xyZjCLZKnnlmX/PnvY9
      fDb8I6jdR5vUzd+f+WsuJbLYXa38i23/jl0rNnHuzJHZirbi31OSbDTV72NXucr7xz9gUBPd
      /+uy4OmtpKg4nC5cHh9ltS1s37kTZ6afcKKAruVIZ7LohkEuEaavb5SsbmCaBrmZCa6ePs7x
      8zeZSubulziCiWnoZJNTdHfc5k7fCKncA1/QQN0qNqxtxO+ygaTgDjaxusFHNJqYaxzxm1EY
      4MNLP+Sd6x/RGY/P/7zkoamsDV/mGsemwsiKDZtsQzZ1CuYX3Mnezp6mevpHztGXTD5y2eMO
      IGkxppJRTMAoTHJtvBPJtYYWHwQ9AbL5CaaTWQDymX6uTfTjCaynfs5xJQkJl6udV1ZtZaz3
      55yPPHovwVdn0XIAWbGBoaHpOpH+Sxy5mmDNcidnz99GKl/Nt2uCRO6c5uCZfhrWbyRUGOZX
      75xnxUtvsbUliKKluXvuMEduTlLb0IxP6ubunX7Ktj5fNMaavY9pGhQyCSZHu7k+KrFqb/VX
      D8LIMJWcAgKPXlNcBD3lSLLKD/b+Ncu9blwq9Ay8z3s3PqU7lZrzy05WtrxMA6O803uO5BcM
      yDOJUQz7ZtYvW89QfxdZyYOKgSq7KHW5uRMfxdW6mg31zcRGRzFUP7Kpoarl+B1AAZBdLKvc
      wreWbaApc4n/3XWezDdsI2+pWBQBGHqa7ivnmJErCfqdGDOQGLzFddsW9n73z6kPuNCTE5zt
      GmfDvrfY0hQETBqqz/HphbO01L2GO9bL9f4CL33ne6yYtZpoC2qcnTPoxvouc/RiB7FEHtVX
      zoYXXqO9cpETZFnBoTpRyXOj5yccy2Rw+5rZ0/4G30mP8D+vn7//xHB4mthet5qxkR9yK6F9
      4dcVomf5eGQbb6/919RV95KSfZR5q/GqBQxTJzx2iFOxjby8+d/QtnwIwxai3FeDgyHu26xK
      dkL+Ruw2P5l4kqz2xfcSfHUWLICpzlP87a1ObIqEJCtUNmxgz96tBOwQBkxvLc/v2MryoLNo
      jJUKkzHd1JWXzn6DhK+imVLnANF4jsLkOGqwmbrQ40sevdVt7Hixilh4isE7N7h05hKB0heo
      8dkWb/lQz5PMxsmpfXzefRwNkOS7yJ7VfL9qBfKNC7PTNhtN1TtZ5Z3k3dMdZB/3fWaMo1f+
      F3f6mmj0l6NlRkn6tvOnbQ3EMznQRvj56f/KxUAzy7ylJJMDOGve5s2qLPHcvTbNcKPnF3wW
      q+QvdrzJqw0d/OjuNfKLFbOFWbAAylqf5aXn9xFyyw8VsBeHrZJQGaVu55ypi45pzj+zIkky
      ml5A0zR0XUN1ulDlx3dl1emlzOmlrKKGlpVr6Tz+z5w+1cn+fWtxL9bLz/Ukw7EB9LqNrHH9
      kqsZDVMykSSZvPbAiVq1VfJsyybC/e9yM52e9xWKbEeVJQpaDgMJvRBjaOoyQ1MgqWW8VFuD
      lrpOVwJAIp+bpnt8mm5AdTTynZVVzIR/xlCB2fzXRNNzTIaP86u7a/jz1d/lmak+TketV9Sz
      2CxYAJJiw+ly4/4Na9QdTj+qopHKZMFb/FA+FyGfc+D1urAnHGT7w2QL5n1rxC9Hxh8Kok8k
      KHzFtnt8rbzQ9hY+xUVTsAK3286elW+RJsrFOyfpGz3P3ZbNvP3M93D3XsZwr2P3siA3Ozrv
      H6ILVr7ERucUPx+6QXaeJbyX1S1vsrPSyaHz/4+7uRJeWPcG9sRdxjM5amv2sW9ZKWfPnaTo
      elTPgS3PMzPeTURTaG14jZ2lGf7p2jUyMO/JZhpZbvUe5GzVX/L62tcZOvOPRZEIFswT2wiz
      +ytYWeng7OnzSOsbUcwM3ZfPozbsoNqvIEntuK59wukLPtqrfej5BLc6RqC9eHLz0kfvEA+t
      o77MhypL6JlpLpwboG7b2/hkk+jwTT67GmHfnm2UuG0ku0/wUYeLfW88Q+lDbXG5Kmmv2UyF
      XUKS4oymJFYs2wyM0N11monUdf7+1N/y51ve4rUN60BP09f1Lu/33pqd/5exuqqU672fcD0c
      fmgtXkKWbdgV2+wSWwHFsYznatbhVmSyuSlOXPo/fDwyOPv7BRyednaveQaHbJJMD/Ozsz/j
      dCRWvGymGJzqZiqbxgRymTv85OK7/OWmbaypamJ8qPe39n9mBRZUEplPhhkYj1K7vAX3I+Wl
      JunIEH0TGk2tTbjmSMzMxei4epmesQSmLOOramPrphV4VMDUiY92cel6NxlTQnYEaarxYJQ0
      0l7jJT52h1u3+4ikDRTZREehpnUT61orsUkmyekBrvUm2Lh+JW6HSmbsFhcH7Wzc2op3Tuu+
      ii+QJDnwu/1QmCGe/zov4pCx2fyUOW3EUmEyxsOvfZJxOoIEVZPpTJS88dUWdn/T06CiJPLR
      2JfAGMtAy+cxJBWbTUF+6By7YegYBsiyjCRLDxljmejGbC4hFz8rjLGEAH4THhf7Ehhjydgc
      zsdel2VlnqXiQx9GUZ7q40uC3zHEaVCBpbHkcOp1+Kj1L1vqZiwaIffjrSYFX47wBbIQIgcQ
      vkACwTwsOQUyTRNdt94b6A3DELE/FLtlBWB8xbX2bwL3Zrsi9gdYUgCyLGOzWdMgVtM0Efsc
      RA4gsDRCAAJLY7ll0HvhWtFKUMT+aOyWE4BAMBcxBRJYGiEAgaURAhBYGkvuAzzMNzM5NLmX
      3X1hXKZ5v8DnmxU3fJXYrS0AUyc5NcTt7kESOZlAbRNrWqqxyRKYBvHwOFnZT3nQc/9RGRvt
      JmIGqa8Joi5VvzE1poe66RmeJq+bOP1VNLc0EHDPumOYeQY7rtE3mUR2+GhoX0NdcI5BgZak
      68YNRmNZbO4grWtWU+6ZNebNROic0mmvL79/u0Jymu6RBA0tDbiUp0UsBrGhO/TEZBqbmgl6
      ZrvybOy9k0kUh4/GlWuoDcyJvZCk62YxdrsnaOUpkEk6PMChT44wllEocet0nviAY52R+9fH
      e27Q2R95UAqZn+D4x0cZTbN0Ls56is6TB/ng+E0Shg2Xy8HU3bN8fPwa6bwBaExcO8zBc/3I
      nhLU3DCffniIwcisiYqZoevEB3zeEcXpK6EQvsUnH59iKjV7RCA+yJHLPfdvZ+pZei6d5GLv
      9FPlXG3MDHLo0AXOnDvMYPSeQYzGxNVi7IqnBCU7zCcHDz24bma4e/IDjs7Gnp+6Zd0ngGlC
      37UzFKqf5ZVda3DJJuuaSvjRT47Q3/j7NDiK54V0o/i41HNxrnz6IbmVL/Ncc4AlGwi1LEb5
      Bn5vSw1uR3HUNloqeO/9y4ymV9GYHOaTU2F2//EfsMJnA30VriPvc/FmN9U7VqIP3+BQl4Pf
      +7NXqLDJGLkWTn34Ple6Rti7fhkKBpp+77yMwXT/VS6PSLz42nocT8lwaRRmuHTqAt7Vz+Hu
      /ui+gZgW6eHjU2H2/Okf0uZVQV+F+8j7XLzRQ/WOdvShGxx+KPanJKSlIM/w6DTLmhtxKRKS
      JGMvX0lraJLRidz8XzXyDF07zdVMA69uqftS76LfOo4Qq9qX43Xa7tdE64aGrig4JIno2DCZ
      6gZavDYkSUJSnSxrrCMTm6agFRgbHqWkoYVKu4IkSSgOD8vry5mZDmMY87eEtPgAx4/dpvH5
      XdQF7E9NrhDp66A3H2Ljiuo5TyWDyNgwmZpGWjzqbOwO6hprycSm0bQCo8Mj+Btb58VuYQGk
      yWYUfF7PnD+iE2+JnUjsnuGUgVbIEZvo4lxHmGe3PYP3qZkDFw0G8qkIJz89ilTdQLlHJZ1O
      4fP658Qk4fL4SGUS6HqOVFLHXzLHJ0NS8HjdJFKx+0bFpq6RTU1y4bNj0PYim4heXD8AAAR0
      SURBVJb7n5KOYmIWIly52EnDui2E3HMnMAaZVIoSr3+OUYKM2+0jmU6gGzlSSeOR2C07BQID
      VfHhcj7aoY17Z8bzUS6f/AU33VDauIvGSs9TMwrqhTSjd69w8uxN/Gv38cbmJlyKhmk68Hnm
      j9YSoOsGxdURJz7v3BOREpIkzTsnXxg8xw//5jxRs4o/2ln91Ex9TC3NnWOfEm/ey55GH+Qz
      86+bDnxeO3MzNEmS0A29uPLzBbE/JaEtBSqmmSCbnf/YlyXpwZFZe4DNL32bH3z/bQKRa5y/
      M4nxVBwcKXD31EccvjJOy843eeXZpllrSAlFLpBM5+e9BtYE7HYbkiQjK3mSqbl2ciamaeKw
      P+g4tuXP8a/+5V/w7dUqR49dIfZU1M8YRAevc6Jbo6k0z1B/PwODQ0QTGaZGhxgJp5BnY2eO
      g5NpmtjtdiRJRvmC2C0sAC8en0k4EnvQqY04E5M5QkH/7A9kFNWGt6yR3bvWM3jhJAPxr2OQ
      tQiYOuHrhzk64GbPGwfY3FrJA1tUGZ/fTzw8ef/1S5gG8eg0LocPRXFSWmpjejp63+HaNAtE
      wjHcrsB9OxpJVnC4/ax68XVWK3c4eq6HjGYs8dtoDDQc1FR4Ge3q4ObNm9zq6GAikmSw5zZd
      o0l8fj+x6YdjD9+P3V+qPhK7hQUg09DQQO/Na0SzGpgFJm+fZoBVNFc+VDAiKZQ2beLAFjcf
      v3+UkfgSGnLmJjlzfpJnX9vN8hLHQ8ZiEv6aJmqSfZzpi6CboOdjdNweorxmGXZVpbKxBXno
      GjfHM5hAfmac2z0xapZXo8jzv0u2l7Bpz17knqOcvj0BS3puUqWiaRP7v/0WBw4c4MCBA7z+
      6iu0Ly9n886X2bW2ltLaJmoTvZzuixZjz0W5dXuIipo67KpKVVMrDF7l1sS92MesmwNIEtSu
      fob6wQ959++68NgMYlknu996m6ANHn3tjEL5yl1sHniPU+c6OLB7HZ7fyMR3kUknGJsZpePd
      /8sZZe74VcG+P/kWK0oq2fXyet5970fcLQmgFBIoVZs40F6NIoEUbOLVbYO8++O/4XzAh56e
      IdC+mzXLAl84Gtq91WzbuoL3jp6irfltli2aDffiI3mq2PXKen7807+nyx9ALiRQqzazv70a
      WQIl2MSr2wb4xx//DedKi7Fb+zi0aWKaOsnYNNGMSnlFAKcqFxNIszg3NqViknh/J9EoTgWk
      2Z8vRZsN44unI5IsF58IpomWTzE1FUP1BQj53LPtvfcVBoX0DBPRFL7SECUex4MYTRPdNFHm
      2POZpolpmEWryqdkEQBm22UaSJL8oF2mSSGfYnoqhuoLEvK5vjR2awtAYHksnAMIBEIAAosj
      BCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksj
      BCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksjBCCwNEIAAksj
      BCCwNP8f27+Gwq5/pxkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='29' name='Year' width='184'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
